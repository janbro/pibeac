var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/pipes/ActionPipe.html",[0,1.903,1,1.698]],["body/pipes/ActionPipe.html",[0,3.014,1,2.375,2,2.592,3,0.316,4,0.316,5,0.268,6,2.592,7,0.495,8,4.098,9,1.074,10,0.672,11,0.534,12,3.132,13,4.23,14,2.419,15,5.358,16,2.22,17,0.495,18,3.132,19,4.23,20,3.222,21,0.808,22,0.037,23,0.642,24,0.596,25,1.936,26,3.501,27,4.23,28,4.23,29,4.79,30,3.964,31,3.501,32,0.534,33,0.808,34,4.23,35,5.13,36,1.933,37,3.02,38,2.88,39,4.23,40,3.662,41,3.42,42,5.13,43,3.132,44,3.501,45,0.475,46,4.23,47,0.42,48,3.132,49,0.316,50,0.136,51,0.808,52,1.092,53,4.79,54,5.741,55,1.653,56,4.23,57,4.79,58,3.132,59,3.132,60,3.132,61,0.89,62,4.79,63,4.23,64,3.964,65,4.23,66,1.932,67,3.132,68,0.018,69,0.025,70,0.018]],["title/components/AlertComponent.html",[71,0.306,72,0.781]],["body/components/AlertComponent.html",[3,0.292,4,0.292,5,0.248,7,0.469,9,0.992,10,0.538,11,0.683,17,0.61,21,0.747,22,0.037,23,0.698,24,0.551,32,0.683,33,1.034,45,0.698,47,0.388,49,0.292,50,0.126,51,1.034,52,0.747,68,0.017,69,0.024,70,0.017,71,0.526,72,1.281,73,1.251,74,1.09,75,1.09,76,1.09,77,2.394,78,4.662,79,4.662,80,4.007,81,4.007,82,1.732,83,4.597,84,2.223,85,1.843,86,1.51,87,4.007,88,0.292,89,1.732,90,4.461,91,4.962,92,1.87,93,0.972,94,2.893,95,2.37,96,4.007,97,2.86,98,2.521,99,1.55,100,2.893,101,4.007,102,1.034,103,2.893,104,2.023,105,1.374,106,4.962,107,2.86,108,3.316,109,2.893,110,4.007,111,1.199,112,1.82,113,1.199,114,2.893,115,2.893,116,2.893,117,2.893,118,4.007,119,0.903,120,1.51,121,1.51,122,1.09,123,1.87,124,1.09,125,1.09,126,0.747,127,1.09,128,0.822,129,0.551,130,1.87,131,0.747,132,1.09,133,0.747,134,1.09,135,0.747,136,0.822,137,0.747,138,1.09,139,0.747,140,1.09,141,0.747,142,1.09,143,0.747,144,0.822,145,1.09,146,1.09]],["title/injectables/AlertService.html",[95,1.253,147,0.859]],["body/injectables/AlertService.html",[3,0.254,4,0.254,5,0.215,7,0.546,10,0.498,11,0.619,16,2.134,17,0.622,21,1.099,22,0.038,23,0.75,24,0.81,25,1.599,32,0.878,33,0.936,36,1.756,45,0.646,47,0.337,49,0.254,50,0.109,52,1.276,55,0.714,61,1.324,64,3.857,66,2.256,68,0.015,69,0.021,70,0.015,78,4.261,79,4.93,88,0.254,89,1.94,90,3.002,93,0.9,95,1.503,99,1.133,102,1.099,105,1.244,107,2.59,111,1.041,113,1.041,147,1.031,148,1.411,149,2.08,150,3.627,151,5.805,152,3.418,153,5.149,154,2.495,155,4.66,156,2.08,157,2.68,158,3.627,159,1.832,160,1.832,161,1.656,162,2.513,163,3.002,164,3.627,165,2.513,166,2.353,167,5.621,168,2.353,169,4.66,170,2.68,171,4.66,172,5.149,173,2.89,174,2.513,175,2.495,176,3.627,177,2.513,178,3.627,179,2.59,180,4.256,181,1.832,182,2.513,183,3.002,184,3.002,185,3.627,186,1.041,187,1.794,188,2.513,189,1.581,190,2.08,191,4.66,192,2.513,193,2.513,194,4.256,195,2.513,196,2.513]],["title/components/AppComponent.html",[71,0.306,126,0.781]],["body/components/AppComponent.html",[3,0.249,4,0.249,5,0.212,7,0.419,9,0.847,10,0.493,11,0.611,16,1.023,17,0.599,21,0.637,22,0.037,23,0.64,24,0.47,25,0.847,30,2.043,32,0.837,33,0.924,36,0.93,45,0.701,47,0.331,49,0.249,50,0.107,51,0.924,52,1.088,55,0.701,61,1.629,66,1.635,68,0.014,69,0.021,70,0.014,71,0.496,72,0.637,73,1.118,74,0.93,75,0.93,76,0.93,82,1.588,84,2.16,85,1.822,86,1.349,88,0.249,89,1.349,92,1.741,93,0.891,99,1.598,102,0.924,105,0.847,113,1.023,119,0.771,120,1.349,121,1.349,122,0.93,123,1.741,124,0.93,125,0.93,126,1.193,127,0.93,128,0.701,129,0.47,130,1.741,131,0.637,132,0.93,133,0.637,134,0.93,135,0.637,136,1.197,137,0.637,138,0.93,139,0.637,140,0.93,141,0.637,142,0.93,143,0.637,144,1.197,145,0.93,146,0.93,163,2.963,166,1.808,168,1.808,197,2.043,198,2.043,199,3.581,200,3.581,201,2.963,202,4.214,203,3.581,204,4.907,205,3.087,206,3.3,207,3.654,208,2.043,209,2.594,210,2.241,211,2.241,212,3.581,213,2.334,214,2.594,215,2.253,216,2.01,217,2.253,218,2.253,219,2.907,220,2.557,221,2.469,222,2.557,223,2.469,224,3.581,225,2.01,226,2.469,227,1.484,228,3.581,229,3.487,230,2.469,231,2.963,232,1.247,233,1.553,234,1.553,235,2.469,236,2.469,237,2.469,238,3.581,239,1.763,240,2.469,241,2.469,242,2.469,243,2.043,244,2.043,245,2.043,246,1.763,247,3.581,248,1.808,249,2.469,250,2.469,251,2.469,252,2.469]],["title/modules/AppModule.html",[253,2.159,254,1.903]],["body/modules/AppModule.html",[1,2.773,2,1.85,3,0.226,4,0.226,5,0.192,22,0.038,45,0.926,47,0.3,49,0.226,50,0.097,68,0.013,69,0.02,70,0.013,71,0.499,72,1.275,73,0.698,85,1.04,95,2.047,105,0.767,112,1.406,119,0.698,126,1.451,128,1.454,131,1.321,133,1.275,135,1.321,136,0.635,137,1.321,139,1.321,141,1.275,143,1.321,144,0.635,186,0.926,209,1.868,210,2.047,211,2.047,213,1.129,225,1.255,229,1.85,231,1.85,232,1.129,233,1.406,234,1.406,248,1.129,253,2.376,254,3.907,255,1.596,256,1.406,257,3.291,258,3.146,259,3.291,260,1.85,261,1.85,262,1.85,263,1.85,264,1.85,265,2.773,266,2.773,267,2.773,268,2.755,269,1.596,270,2.235,271,3.329,272,2.755,273,1.596,274,3.329,275,2.235,276,2.839,277,3.329,278,3.977,279,1.129,280,3.329,281,3.329,282,1.406,283,3.329,284,2.235,285,3.329,286,2.235,287,2.235,288,3.329,289,1.596,290,1.85,291,3.329,292,1.85,293,1.85,294,2.235,295,2.235,296,1.85,297,4.711,298,2.235,299,2.235,300,2.235,301,2.235,302,2.235,303,2.235,304,2.235,305,2.235,306,2.235,307,2.235,308,1.85,309,2.094,310,2.235,311,2.235,312,2.235,313,2.235,314,2.235,315,2.235,316,1.85,317,2.235,318,4.234,319,2.235,320,3.329,321,3.329,322,3.329,323,2.235,324,2.235,325,2.235,326,2.235,327,3.329,328,3.329,329,3.329,330,1.681]],["title/guards/AuthGuard.html",[309,1.903,331,1.903]],["body/guards/AuthGuard.html",[3,0.348,4,0.348,5,0.295,7,0.527,10,0.527,11,0.768,17,0.527,21,1.162,22,0.037,23,0.683,24,0.857,32,0.587,37,2.456,45,0.762,47,0.461,49,0.348,50,0.149,51,0.888,52,1.162,55,1.513,68,0.02,69,0.026,70,0.02,88,0.348,89,1.296,93,1.062,99,1.074,105,1.18,113,1.425,136,0.977,147,1.279,156,2.846,157,2.917,159,2.273,160,2.273,161,2.432,170,1.737,186,1.425,187,2.456,205,2.832,209,3.29,213,1.737,214,2.527,215,2.832,216,2.527,217,2.832,219,2.832,232,1.737,308,2.846,309,2.832,330,2.273,331,3.35,332,2.846,333,4.502,334,5.325,335,3.44,336,4.502,337,5.325,338,4.154,339,5.325,340,3.44,341,4.502,342,4.502,343,2.846,344,3.44,345,2.456,346,2.846,347,2.846,348,2.846,349,3.44]],["title/injectables/AuthenticationService.html",[147,0.859,211,1.253]],["body/injectables/AuthenticationService.html",[3,0.266,4,0.508,5,0.225,7,0.557,10,0.511,11,0.639,16,2.166,17,0.644,21,1.127,22,0.038,23,0.569,24,0.831,25,1.632,32,0.744,33,0.967,36,1.793,45,0.763,47,0.352,49,0.266,50,0.114,52,1.298,55,0.747,61,1.485,66,1.711,68,0.015,69,0.022,70,0.015,88,0.266,89,2.027,93,0.923,102,0.967,105,1.497,111,1.089,113,1.089,136,1.648,147,1.065,148,1.476,152,3.164,175,2.402,179,2.675,181,2.402,189,3.46,205,2.357,207,4.053,209,2.671,211,1.552,213,2.539,214,2.103,215,2.357,216,2.103,217,2.357,220,2.675,232,1.328,279,1.328,330,1.328,350,2.176,351,4.365,352,4.365,353,4.365,354,4.365,355,3.747,356,1.877,357,3.397,358,3.747,359,2.823,360,2.357,361,2.675,362,2.357,363,3.747,364,2.629,365,4.758,366,3.397,367,3.747,368,3.46,369,2.629,370,2.357,371,3.747,372,2.357,373,2.935,374,3.747,375,2.629,376,3.101,377,2.629,378,2.629,379,3.747,380,2.629,381,3.747,382,1.877,383,1.877,384,2.629,385,2.629,386,2.176,387,2.629,388,2.629,389,2.629]],["title/classes/Beacon.html",[50,0.131,129,0.576]],["body/classes/Beacon.html",[3,0.344,4,0.344,5,0.291,7,0.398,8,4.114,10,0.645,14,2.521,16,2.451,17,0.675,20,3.091,22,0.037,23,0.887,24,1.076,25,1.712,26,2.814,33,1.154,49,0.344,50,0.148,68,0.02,69,0.026,70,0.02,88,0.344,129,1.097,179,3.191,343,3.698,390,2.139,391,2.814,392,2.802,393,3.401,394,4.469,395,4.131,396,4.992,397,4.992,398,5.507,399,3.401,400,3.191,401,3.191,402,2.814,403,3.401,404,3.401,405,4.469,406,4.469,407,2.509,408,3.401,409,3.191,410,3.698,411,4.469,412,4.469,413,3.401,414,3.698,415,3.191,416,3.401,417,3.401,418,3.401,419,3.401]],["title/injectables/BeaconService.html",[147,0.859,265,1.698]],["body/injectables/BeaconService.html",[3,0.186,4,0.186,5,0.157,7,0.579,10,0.608,11,0.489,14,2.309,17,0.646,20,3.388,21,1.34,22,0.038,23,0.837,24,0.989,25,1.365,32,1,33,0.74,36,1.079,45,0.655,47,0.246,49,0.186,50,0.08,52,1.366,55,1.475,68,0.021,69,0.017,70,0.011,88,0.186,93,0.745,102,0.474,104,0.927,105,0.983,111,0.761,113,0.761,129,1.152,144,1.131,147,0.814,148,1.031,152,2.715,154,0.927,166,1.447,168,2.01,173,1.608,175,1.447,181,1.447,189,1.802,218,1.802,248,2.714,265,1.608,279,0.927,356,1.311,357,2.841,359,2.423,360,1.802,361,2.045,362,2.504,370,2.877,372,3.109,382,1.311,383,1.311,392,3.155,407,3.058,409,3.889,410,3.294,420,1.519,421,1.802,422,2.915,423,3.294,424,3.98,425,2.371,426,2.865,427,2.865,428,2.865,429,2.865,430,2.865,431,3.784,432,3.98,433,2.865,434,2.371,435,1.836,436,2.877,437,1.836,438,3.98,439,2.371,440,1.836,441,2.865,442,2.865,443,1.836,444,4.942,445,2.865,446,1.836,447,2.865,448,5.078,449,1.836,450,4.573,451,3.572,452,4.316,453,4.316,454,2.865,455,3.523,456,1.836,457,2.371,458,2.865,459,2.865,460,1.836,461,2.865,462,1.836,463,2.371,464,2.371,465,2.865,466,1.836,467,1.836,468,1.836,469,2.371,470,2.865,471,2.865,472,1.836,473,1.836,474,1.836,475,2.865,476,1.836,477,1.311,478,1.836,479,1.836,480,1.836,481,1.836,482,1.836,483,1.836,484,1.836,485,1.836,486,1.836]],["title/interceptors/ErrorInterceptor.html",[266,1.698,487,2.159]],["body/interceptors/ErrorInterceptor.html",[3,0.271,4,0.271,5,0.23,7,0.517,8,1.916,10,0.445,11,0.648,17,0.445,21,0.981,22,0.038,23,0.577,24,0.724,32,0.458,38,2.478,41,1.916,45,0.799,47,0.36,49,0.271,50,0.117,51,0.693,52,1.24,55,1.538,61,1.496,68,0.016,69,0.022,70,0.016,88,0.271,89,1.011,93,0.934,98,2.392,111,1.112,113,1.112,147,1.08,154,2.229,157,2.792,159,1.92,160,1.92,161,1.736,168,1.92,175,2.229,186,1.112,190,2.221,207,3.428,211,2.242,214,2.134,220,2.714,234,1.688,239,1.916,246,2.714,266,2.134,279,1.355,345,3.619,359,3.104,360,1.688,372,2.392,386,3.146,421,2.392,436,3.405,488,2.221,489,2.221,490,3.974,491,3.802,492,3.802,493,3.146,494,2.684,495,2.684,496,3.146,497,3.974,498,3.758,499,3.974,500,2.684,501,3.802,502,3.802,503,3.802,504,4.415,505,4.415,506,4.415,507,4.415,508,4.415,509,3.802,510,3.146,511,2.221,512,3.146,513,2.684,514,2.684,515,2.221,516,2.221,517,2.684,518,3.802,519,2.684,520,2.684,521,2.684,522,2.684,523,2.684,524,2.684,525,4.415,526,5.068,527,2.684,528,2.684,529,2.221,530,3.802,531,2.684,532,3.802,533,3.802,534,2.684,535,2.684,536,2.221,537,2.684,538,2.684,539,3.802,540,2.684,541,3.146,542,3.802,543,2.684,544,2.684,545,2.684]],["title/interceptors/JwtInterceptor.html",[267,1.698,487,2.159]],["body/interceptors/JwtInterceptor.html",[3,0.365,4,0.365,5,0.309,7,0.544,10,0.423,11,0.792,17,0.423,21,0.932,22,0.037,23,0.548,24,0.687,32,0.616,44,2.987,45,0.78,47,0.484,49,0.365,50,0.157,51,0.932,52,1.199,55,1.026,68,0.021,69,0.027,70,0.021,88,0.365,107,3.317,111,1.496,147,1.32,175,2.594,205,2.271,267,2.608,279,1.823,316,2.987,359,3.225,362,3.412,436,3.531,488,2.987,490,4.489,493,3.845,496,3.845,497,4.489,498,4.102,499,4.489,511,2.987,512,3.845,546,2.987,547,5.612,548,3.61,549,3.845,550,4.646,551,4.646,552,2.987,553,4.646,554,3.61,555,4.646,556,3.61,557,4.646,558,3.61,559,3.61,560,3.61,561,3.61]],["title/components/LandingPageComponent.html",[71,0.306,131,0.781]],["body/components/LandingPageComponent.html",[3,0.332,4,0.332,5,0.282,7,0.385,9,1.129,10,0.512,11,0.746,17,0.512,22,0.037,32,0.561,45,0.499,47,0.441,49,0.332,50,0.143,51,1.129,68,0.019,69,0.026,70,0.019,71,0.496,72,0.849,73,1.366,74,1.24,75,1.24,76,1.24,82,1.85,84,2.27,85,1.881,86,1.648,88,0.332,92,1.972,93,1.152,99,1.749,102,0.849,119,1.028,120,1.648,121,1.648,122,1.24,123,1.972,124,1.24,125,1.24,126,0.849,127,1.24,128,0.935,129,0.626,130,1.972,131,1.351,132,2.053,133,0.849,134,1.24,135,0.849,136,0.935,137,0.849,138,1.24,139,0.849,140,1.24,141,0.849,142,1.24,143,0.849,144,0.935,145,1.24,146,1.24,227,1.812,248,2.642,498,3.122,536,3.618,562,4.064,563,1.847,564,4.373,565,2.751,566,2.349,567,2.349,568,2.208,569,4.373,570,4.373,571,3.618,572,4.373,573,5.233,574,4.373,575,4.373,576,3.618,577,4.373]],["title/components/LoginComponent.html",[71,0.306,133,0.781]],["body/components/LoginComponent.html",[3,0.214,4,0.214,5,0.181,7,0.374,9,0.726,10,0.451,11,0.545,16,1.324,17,0.606,21,1.107,22,0.037,23,0.584,24,0.403,25,1.096,32,0.545,33,0.825,36,1.45,37,3.285,45,0.698,47,0.284,49,0.214,50,0.092,51,0.825,52,1.188,55,1.093,66,1.459,68,0.012,69,0.019,70,0.012,71,0.465,72,0.546,73,0.998,74,0.797,75,0.797,76,0.797,82,1.45,84,2.093,85,1.734,86,1.204,88,0.214,89,1.734,92,1.615,93,0.907,95,2.143,97,2.28,98,2.009,99,1.615,102,0.825,104,1.068,112,1.331,119,0.661,120,1.204,121,1.204,122,0.797,123,1.615,124,0.797,125,0.797,126,0.546,127,0.797,128,0.601,129,0.403,130,1.615,131,0.546,132,0.797,133,1.107,134,0.797,135,0.546,136,1.612,137,0.546,138,0.797,139,0.546,140,0.797,141,0.546,142,0.797,143,0.546,144,1.093,145,0.797,146,0.797,154,1.068,157,2.611,159,2.165,160,1.613,161,1.957,170,2.324,183,2.643,184,1.751,186,0.877,187,3.285,211,2.143,227,1.324,234,1.331,246,1.51,269,1.51,282,1.331,330,2.324,345,2.28,348,3.808,366,2.747,368,2.895,373,2.583,392,1.188,516,3.548,549,2.643,568,1.613,578,1.751,579,4.38,580,3.194,581,3.285,582,3.848,583,3.185,584,3.548,585,2.643,586,3.185,587,1.751,588,4.157,589,3.194,590,3.194,591,3.194,592,2.116,593,2.116,594,2.643,595,3.194,596,3.194,597,2.643,598,2.116,599,2.643,600,2.28,601,3.185,602,2.116,603,2.28,604,2.643,605,3.194,606,2.116,607,2.643,608,2.643,609,2.643,610,1.751,611,2.116,612,2.643,613,2.643,614,2.643,615,2.643,616,2.643,617,1.751,618,2.116,619,1.751,620,2.643,621,2.116,622,2.116,623,1.751,624,2.116,625,2.116,626,2.116,627,1.751,628,1.751,629,1.751,630,1.751,631,2.116,632,2.643,633,2.116,634,2.116,635,2.116,636,2.116,637,2.116,638,2.116,639,1.751,640,3.548]],["title/components/LoginPageComponent.html",[71,0.306,135,0.781]],["body/components/LoginPageComponent.html",[3,0.346,4,0.346,5,0.294,7,0.401,9,1.175,10,0.526,11,0.766,17,0.526,22,0.037,32,0.584,45,0.52,47,0.459,49,0.346,50,0.149,51,1.159,68,0.02,69,0.026,70,0.02,71,0.558,72,0.885,73,1.403,74,1.291,75,1.291,76,1.291,82,1.888,84,2.284,85,1.893,86,1.692,88,0.346,92,2.004,93,1.168,99,1.829,102,0.885,119,1.07,120,1.692,121,1.692,122,1.291,123,2.004,124,1.291,125,1.291,126,0.885,127,1.291,128,0.974,129,0.652,130,2.004,131,0.885,132,1.291,133,0.885,134,1.291,135,1.373,136,1.64,137,0.885,138,1.291,139,0.885,140,1.291,141,0.885,142,1.291,143,0.885,144,0.974,145,1.291,146,1.291,227,1.861,563,1.923,565,2.825,566,2.446,567,2.446,568,2.268,641,4.146,642,3.717]],["title/components/PageNotFoundComponent.html",[71,0.306,137,0.781]],["body/components/PageNotFoundComponent.html",[3,0.346,4,0.346,5,0.293,7,0.401,9,1.173,10,0.525,11,0.765,17,0.525,22,0.037,32,0.583,45,0.519,47,0.458,49,0.346,50,0.149,51,1.158,61,1.275,68,0.02,69,0.026,70,0.02,71,0.557,72,0.883,73,1.401,74,1.289,75,1.289,76,1.289,82,1.886,84,2.283,85,1.892,86,1.69,88,0.346,92,2.002,93,1.167,99,1.866,102,0.883,119,1.068,120,1.69,121,1.69,122,1.289,123,2.002,124,1.289,125,1.289,126,0.883,127,1.289,128,0.972,129,0.651,130,2.002,131,0.883,132,1.289,133,0.883,134,1.289,135,0.883,136,0.972,137,1.372,138,1.289,139,0.883,140,1.289,141,0.883,142,1.289,143,0.883,144,0.972,145,1.289,146,1.289,227,1.859,568,2.265,643,4.142,644,2.83,645,4.486,646,4.486,647,4.486,648,4.486,649,3.42,650,3.42]],["title/components/ProfilePageComponent.html",[71,0.306,139,0.781]],["body/components/ProfilePageComponent.html",[3,0.222,4,0.222,5,0.188,7,0.385,9,0.753,10,0.548,11,0.56,17,0.575,21,0.567,22,0.037,23,0.333,24,0.418,31,2.717,32,0.745,33,0.848,38,2.754,40,2.344,45,0.71,47,0.294,49,0.222,50,0.095,51,0.848,52,1.016,55,0.624,61,1.519,66,1.002,68,0.013,69,0.019,70,0.013,71,0.472,72,0.567,73,1.025,74,0.827,75,0.827,76,0.827,82,1.482,84,2.109,85,1.748,86,1.237,88,0.222,89,1.482,92,1.645,93,0.695,99,1.633,102,0.567,104,1.658,105,0.753,108,2.717,119,0.685,120,1.237,121,1.237,122,0.827,123,1.645,124,0.827,125,0.827,126,0.567,127,0.827,128,0.624,129,0.418,130,1.645,131,0.567,132,0.827,133,0.567,134,0.827,135,0.567,136,0.624,137,0.567,138,0.827,139,1.127,140,2.109,141,0.567,142,0.827,143,0.567,144,0.624,145,0.827,146,0.827,157,2.64,159,1.658,160,1.658,161,1.499,166,2.205,173,2.451,186,0.909,197,1.816,201,2.717,206,3.118,208,1.816,209,2.451,210,2.256,213,2.205,214,1.843,215,2.066,216,1.843,217,2.066,218,2.066,219,3.086,222,3.118,225,1.232,227,1.361,232,1.108,233,1.381,239,1.567,243,1.816,244,1.816,245,1.816,338,1.816,368,3.29,373,1.843,563,1.232,565,2.066,568,1.658,581,3.733,600,1.567,651,4.209,652,3.934,653,3.934,654,3.934,655,3.284,656,2.195,657,2.195,658,2.195,659,3.284,660,3.284,661,2.195,662,2.195,663,4.675,664,2.195,665,2.195,666,1.816,667,2.195,668,3.284,669,3.284,670,4.367,671,3.284,672,2.195,673,2.195,674,3.284,675,2.195,676,2.195,677,2.195,678,2.195,679,2.195,680,1.816,681,2.195,682,2.195,683,2.195,684,2.195,685,2.195,686,3.284,687,2.344,688,3.284,689,3.284,690,2.195,691,3.284,692,2.195,693,4.367,694,2.195,695,2.195,696,3.934,697,2.195,698,2.195,699,2.195,700,2.195,701,3.284,702,3.284]],["title/components/RegisterComponent.html",[71,0.306,141,0.781]],["body/components/RegisterComponent.html",[3,0.22,4,0.22,5,0.187,7,0.382,9,0.747,10,0.611,11,0.557,17,0.594,21,0.563,22,0.037,23,0.496,24,0.415,25,1.12,32,0.557,33,0.843,36,1.231,45,0.743,47,0.292,49,0.22,50,0.095,51,0.843,52,1.123,55,0.928,61,0.928,66,1.491,68,0.013,69,0.019,70,0.013,71,0.471,72,0.563,73,1.02,74,0.821,75,0.821,76,0.821,82,1.476,84,2.106,85,1.745,86,1.231,88,0.22,89,1.639,92,1.639,93,0.92,95,2.162,97,2.332,98,2.055,99,1.528,102,0.843,104,1.1,112,1.371,119,0.681,120,1.231,121,1.231,122,0.821,123,1.639,124,0.821,125,0.821,126,0.563,127,0.821,128,0.619,129,0.415,130,1.639,131,0.563,132,0.821,133,0.563,134,0.821,135,0.563,136,1.113,137,0.563,138,0.821,139,0.563,140,0.821,141,1.123,142,0.821,143,0.563,144,1.442,145,0.821,146,0.821,154,1.1,157,2.635,159,1.649,160,1.649,161,1.491,166,1.649,170,2.353,186,0.903,210,2.162,218,2.055,219,2.055,233,1.371,282,1.371,330,2.353,346,1.803,347,1.803,366,1.556,368,3.192,370,2.055,373,2.747,392,2.848,421,2.055,477,1.556,515,1.803,579,4.676,581,2.797,583,3.242,584,3.601,585,2.703,586,3.242,587,1.803,588,4.198,597,2.703,599,2.703,600,2.332,601,3.242,603,2.332,604,2.703,607,2.703,608,2.703,609,2.703,610,1.803,612,2.703,613,2.703,614,2.703,615,2.703,616,2.703,617,1.803,619,1.803,620,3.601,623,1.803,627,1.803,628,1.803,629,1.803,630,1.803,632,2.703,639,1.803,640,4.318,687,3.327,703,1.803,704,3.106,705,3.266,706,3.917,707,3.266,708,2.179,709,3.266,710,2.179,711,3.266,712,2.179,713,2.179,714,2.179,715,2.179,716,2.179,717,2.179,718,2.179,719,2.179,720,2.179,721,2.179,722,2.179,723,3.266,724,3.266,725,3.266]],["title/components/RegisterPageComponent.html",[71,0.306,143,0.781]],["body/components/RegisterPageComponent.html",[3,0.346,4,0.346,5,0.294,7,0.401,9,1.175,10,0.526,11,0.766,17,0.526,22,0.037,32,0.584,45,0.52,47,0.459,49,0.346,50,0.149,51,1.159,68,0.02,69,0.026,70,0.02,71,0.558,72,0.885,73,1.403,74,1.291,75,1.291,76,1.291,82,1.888,84,2.284,85,1.893,86,1.692,88,0.346,92,2.004,93,1.168,99,1.829,102,0.885,119,1.07,120,1.692,121,1.692,122,1.291,123,2.004,124,1.291,125,1.291,126,0.885,127,1.291,128,0.974,129,0.652,130,2.004,131,0.885,132,1.291,133,0.885,134,1.291,135,0.885,136,0.974,137,0.885,138,1.291,139,0.885,140,1.291,141,0.885,142,1.291,143,1.373,144,1.569,145,1.291,146,1.291,227,1.861,563,1.923,565,2.825,566,2.446,567,2.446,568,2.268,642,3.717,704,3.206,726,4.146]],["title/classes/Traffic.html",[50,0.131,407,1.698]],["body/classes/Traffic.html",[3,0.402,4,0.402,5,0.341,7,0.466,14,2.838,16,2.329,17,0.658,22,0.037,23,0.853,24,0.941,33,1.276,49,0.402,50,0.173,68,0.023,69,0.029,70,0.023,88,0.402,129,0.758,390,2.505,395,4.448,400,3.529,401,3.529,407,3.017,409,4.127,414,4.09,415,3.529,451,4.09,727,3.295,728,3.981,729,3.981,730,3.981,731,4.448,732,5.375,733,3.981,734,3.981,735,3.981,736,4.943,737,4.943,738,4.943,739,3.981]],["title/classes/User.html",[50,0.131,61,0.859]],["body/classes/User.html",[3,0.377,4,0.377,5,0.319,7,0.437,10,0.705,14,2.395,16,2.469,17,0.664,20,2.928,22,0.037,23,0.879,24,0.903,33,1.224,49,0.377,50,0.162,61,1.693,68,0.022,69,0.028,70,0.022,88,0.377,129,1.045,248,2.395,373,2.928,390,2.346,400,3.386,401,3.724,402,3.085,687,4.047,740,3.085,741,3.728,742,3.728,743,3.728,744,5.216,745,3.728,746,4.743,747,3.728,748,3.728,749,3.728,750,3.728,751,3.925]],["title/injectables/UserService.html",[147,0.859,210,1.253]],["body/injectables/UserService.html",[3,0.174,4,0.174,5,0.147,7,0.597,10,0.661,11,0.464,14,2.247,17,0.656,20,2.919,21,1.342,22,0.038,23,0.675,24,0.99,25,1.159,32,0.969,33,1.248,36,1.026,45,0.635,47,0.231,49,0.174,50,0.075,52,1.342,55,1.503,61,1.731,68,0.01,69,0.016,70,0.01,88,0.174,93,0.715,102,0.872,104,0.869,105,0.934,111,0.713,113,0.713,129,0.847,144,0.774,147,0.774,148,0.966,152,2.633,154,0.869,161,2.032,166,1.94,168,2.247,170,1.375,173,2.793,175,1.375,181,2.573,189,1.713,206,2.742,210,1.128,216,1.529,222,1.944,248,1.94,279,0.869,356,1.229,357,2.742,359,2.349,360,1.713,361,1.944,362,2.416,370,2.8,372,1.713,376,2.254,382,1.229,383,1.229,392,2.498,415,1.944,421,1.713,422,2.796,423,3.179,425,2.254,431,2.254,434,2.254,436,2.416,439,2.254,457,2.254,463,3.179,464,2.254,469,2.254,477,1.229,510,2.254,552,2.254,571,3.179,680,2.254,704,1.944,731,3.463,751,4.761,752,1.425,753,2.723,754,3.841,755,2.723,756,3.841,757,2.723,758,2.723,759,2.723,760,2.723,761,2.723,762,2.723,763,1.721,764,2.723,765,3.841,766,5.435,767,1.721,768,2.723,769,1.721,770,2.723,771,1.721,772,1.721,773,1.721,774,2.723,775,1.721,776,2.723,777,1.721,778,2.723,779,1.721,780,2.723,781,1.721,782,2.723,783,2.723,784,4.45,785,1.721,786,2.723,787,2.723,788,2.723,789,1.721,790,2.723,791,2.723,792,1.721,793,2.723,794,2.723,795,2.723,796,1.721,797,2.723,798,2.254,799,2.723,800,1.721,801,2.723,802,1.721,803,1.721,804,1.721,805,1.721,806,3.379,807,1.721,808,2.723,809,2.723,810,1.721,811,1.721,812,1.721,813,1.721,814,1.721,815,1.721,816,1.721]],["title/coverage.html",[817,3.419]],["body/coverage.html",[0,2.189,1,1.953,5,0.298,6,2.879,22,0.037,23,0.528,38,2.546,50,0.219,61,0.989,68,0.02,69,0.027,70,0.02,71,0.605,72,0.898,77,2.879,95,1.442,126,0.898,128,0.989,129,0.662,131,0.898,133,0.898,135,0.898,137,0.898,139,0.898,141,0.898,143,0.898,147,1.52,149,2.879,181,1.757,198,2.879,210,1.442,211,1.442,265,1.953,266,1.953,267,1.953,296,2.879,309,2.189,331,2.189,332,2.879,350,2.879,391,2.879,407,1.953,420,2.879,487,3.238,489,2.879,546,2.879,562,2.879,563,3.114,578,2.879,603,3.238,641,2.879,643,2.879,644,2.879,651,2.879,703,2.879,726,2.879,727,2.879,740,2.879,752,2.879,817,2.879,818,2.879,819,3.479,820,3.479,821,6.256,822,5.047,823,3.479,824,3.479,825,5.688,826,5.047,827,4.536,828,3.479,829,3.479,830,3.479,831,3.479,832,3.479,833,3.479,834,2.879,835,3.754,836,4.536,837,2.879,838,3.479,839,3.479]],["title/dependencies.html",[256,2.289,840,2.524]],["body/dependencies.html",[22,0.037,47,0.525,68,0.023,69,0.029,70,0.023,105,1.345,111,1.625,186,1.625,213,1.98,232,1.98,256,2.467,258,3.496,272,4.052,273,3.496,282,2.467,289,2.8,290,3.245,292,3.245,293,3.245,318,3.245,576,3.245,666,3.245,841,4.052,842,3.921,843,3.921,844,3.921,845,3.921,846,4.896,847,3.921,848,3.921,849,3.921,850,6.018,851,4.896,852,3.245,853,3.921,854,3.921,855,3.921,856,3.921,857,3.921,858,3.921,859,3.921,860,3.921,861,3.921,862,3.921,863,3.921,864,3.921,865,3.921,866,3.921,867,3.921,868,3.921,869,3.921,870,3.921,871,3.921,872,3.921,873,3.921,874,3.921,875,3.921,876,3.921,877,3.921]],["title/index.html",[88,0.255,878,2.524,879,2.524]],["body/index.html",[10,0.45,22,0.028,41,2.74,68,0.023,69,0.028,70,0.023,71,0.534,85,1.199,173,2.155,181,1.938,225,2.155,227,1.591,289,4.082,529,3.177,541,3.177,594,4.904,798,3.177,818,4.592,841,3.998,852,3.998,880,3.839,881,3.839,882,3.839,883,3.839,884,3.839,885,3.839,886,3.839,887,3.839,888,3.839,889,5.837,890,3.839,891,3.839,892,3.839,893,3.839,894,3.839,895,3.839,896,3.839,897,3.839,898,3.839,899,4.831,900,3.839,901,3.839,902,3.839,903,5.549,904,3.839,905,3.177,906,4.831,907,4.831,908,3.839,909,3.839,910,3.839,911,3.839,912,5.287,913,4.831,914,3.839,915,4.831,916,4.831,917,3.839,918,4.831,919,4.831,920,3.839,921,5.549,922,3.839,923,3.839,924,3.839,925,5.287,926,3.839,927,3.839,928,3.839]],["title/modules.html",[255,2.95]],["body/modules.html",[22,0.033,68,0.028,69,0.033,70,0.028,254,3.052,255,3.464,273,3.464,929,4.852,930,4.852,931,4.852]],["title/overview.html",[932,3.419]],["body/overview.html",[0,2.253,1,2.873,22,0.037,38,2.01,40,3.654,68,0.021,69,0.027,70,0.021,72,1.321,73,1.119,95,2.121,119,1.119,126,1.506,128,1.454,131,1.321,133,1.321,135,1.321,137,1.321,139,1.321,141,1.321,143,1.321,148,2.01,210,2.121,211,2.121,225,2.01,253,3.3,254,4.01,256,2.253,257,2.964,258,2.557,259,2.964,260,2.964,261,2.964,262,2.964,263,2.964,264,2.964,265,2.873,266,2.873,267,2.873,268,3.825,269,2.557,331,2.253,390,2.253,932,2.964,933,3.582,934,3.582,935,3.582]],["title/routes.html",[276,2.95]],["body/routes.html",[22,0.033,68,0.029,69,0.033,70,0.029,276,3.511]],["title/miscellaneous/variables.html",[936,2.089,937,3.011]],["body/miscellaneous/variables.html",[22,0.037,23,0.813,25,1.838,36,2.019,68,0.027,69,0.031,70,0.027,88,0.46,168,2.705,170,2.297,330,2.297,834,3.764,835,4.866,837,3.764,905,4.433,936,3.764,937,3.764,938,4.549,939,4.549]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":38,"title":{},"body":{"pipes/ActionPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/ProfilePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.12.7",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0.13.6",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["008577",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":40,"title":{},"body":{"pipes/ActionPipe.html":{},"components/ProfilePageComponent.html":{},"overview.html":{}}}],["1/1",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":933,"title":{},"body":{"overview.html":{}}}],["100",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":683,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["10px",{"_index":695,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["15/15",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":42,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["2.1.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":697,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["3",{"_index":935,"title":{},"body":{"overview.html":{}}}],["3.2.4",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["38/38",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":934,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":506,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401",{"_index":534,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":508,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["5",{"_index":575,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5.8.1",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":691,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["59.99",{"_index":570,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["6",{"_index":723,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6.1.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["7.2.6",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["_id",{"_index":395,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{}}}],["absolute",{"_index":700,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["access",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accordingly",{"_index":524,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["acorn",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":8,"title":{},"body":{"pipes/ActionPipe.html":{},"classes/Beacon.html":{},"interceptors/ErrorInterceptor.html":{}}}],["actionpipe",{"_index":1,"title":{"pipes/ActionPipe.html":{}},"body":{"pipes/ActionPipe.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionpipe.actions[value].name",{"_index":67,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["actions",{"_index":35,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["activatedroute",{"_index":516,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activates",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["actual_component",{"_index":146,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["add",{"_index":552,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["addgroup",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["addgroup(groupname",{"_index":762,"title":{},"body":{"injectables/UserService.html":{}}}],["adds",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["again",{"_index":659,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["alert",{"_index":78,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alert'},{'name",{"_index":125,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["alert.component.html",{"_index":87,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertcomponent",{"_index":72,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertservice",{"_index":95,"title":{"injectables/AlertService.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["angular",{"_index":841,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":666,"title":{},"body":{"components/ProfilePageComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cli",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":47,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":186,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":662,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["animate('0.2s",{"_index":674,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["animations",{"_index":667,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["anonymous",{"_index":406,"title":{},"body":{"classes/Beacon.html":{}}}],["app",{"_index":85,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["app.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":126,"title":{"components/AppComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":254,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["assigned",{"_index":419,"title":{},"body":{"classes/Beacon.html":{}}}],["associated",{"_index":394,"title":{},"body":{"classes/Beacon.html":{}}}],["authenticated",{"_index":538,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["authenticates",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticating",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["authentication",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":211,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice.loginemitted$.subscribe(success",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticationservice.logoutemitted$.subscribe(success",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["authguard",{"_index":309,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":553,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authorized",{"_index":535,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["auto",{"_index":702,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["automated",{"_index":888,"title":{},"body":{"index.html":{}}}],["available",{"_index":44,"title":{},"body":{"pipes/ActionPipe.html":{},"interceptors/JwtInterceptor.html":{}}}],["backend",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{}}}],["background",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["bad",{"_index":507,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["beacon",{"_index":129,"title":{"classes/Beacon.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["beacon.id",{"_index":485,"title":{},"body":{"injectables/BeaconService.html":{}}}],["beacon_id",{"_index":731,"title":{},"body":{"classes/Traffic.html":{},"injectables/UserService.html":{}}}],["beacongroups",{"_index":744,"title":{},"body":{"classes/User.html":{}}}],["beaconmanagerpagecomponent",{"_index":128,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["beacons",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BeaconService.html":{},"components/LandingPageComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["beaconservice",{"_index":265,"title":{"injectables/BeaconService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BeaconService.html":{},"coverage.html":{},"overview.html":{}}}],["bearer",{"_index":560,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["belongs",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["bg",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":542,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Beacon.html":{}}}],["bootstrap",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":62,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["branch",{"_index":892,"title":{},"body":{"index.html":{}}}],["browse",{"_index":931,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":906,"title":{},"body":{"index.html":{}}}],["button",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactivate",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":725,"title":{},"body":{"components/RegisterComponent.html":{}}}],["case",{"_index":54,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["catch",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["catcherror",{"_index":514,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["change",{"_index":173,"title":{},"body":{"injectables/AlertService.html":{},"injectables/BeaconService.html":{},"components/ProfilePageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["changes",{"_index":798,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["characters",{"_index":724,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chart.js",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["charts",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["chartsmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":41,"title":{},"body":{"pipes/ActionPipe.html":{},"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["checking",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ci",{"_index":887,"title":{},"body":{"index.html":{}}}],["class",{"_index":50,"title":{"classes/Beacon.html":{},"classes/Traffic.html":{},"classes/User.html":{}},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":390,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":153,"title":{},"body":{"injectables/AlertService.html":{}}}],["clears",{"_index":163,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{}}}],["clearuser",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":852,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clicked",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["client",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{}}}],["clues",{"_index":544,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cluster_appmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":541,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["collect",{"_index":405,"title":{},"body":{"classes/Beacon.html":{}}}],["collect_data",{"_index":396,"title":{},"body":{"classes/Beacon.html":{}}}],["color",{"_index":30,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AppComponent.html":{}}}],["company",{"_index":686,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["compodoc",{"_index":908,"title":{},"body":{"index.html":{}}}],["component",{"_index":71,"title":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":124,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["components",{"_index":73,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"overview.html":{}}}],["components/beacon",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["components/landing",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login.component",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["components/profile",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["components/register",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["components/register.component",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["config.ts",{"_index":900,"title":{},"body":{"index.html":{}}}],["connection",{"_index":504,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.error",{"_index":545,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(error",{"_index":477,"title":{},"body":{"injectables/BeaconService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["console.log(this.user",{"_index":682,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["const",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor(alertservice",{"_index":94,"title":{},"body":{"components/AlertComponent.html":{}}}],["constructor(authenticationservice",{"_index":494,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(cookie",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["constructor(formbuilder",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":113,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{}}}],["constructor(router",{"_index":156,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{}}}],["contain",{"_index":543,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":698,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["containing",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["contains",{"_index":183,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["convenience",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cookie",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{},"dependencies.html":{}}}],["cookies",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{}}}],["cookieservice",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{}}}],["core",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":817,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["current",{"_index":107,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currently",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{},"injectables/UserService.html":{}}}],["currentuser",{"_index":555,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentuser.token",{"_index":557,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["customer",{"_index":741,"title":{},"body":{"classes/User.html":{}}}],["data",{"_index":392,"title":{},"body":{"classes/Beacon.html":{},"injectables/BeaconService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["data['username",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["declarations",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":36,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":423,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["delete(id",{"_index":434,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["deletegroup",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["deletegroup(groupname",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":256,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":896,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":882,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["desired",{"_index":27,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["detect",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["detected",{"_index":736,"title":{},"body":{"classes/Traffic.html":{}}}],["detected_dev_dists",{"_index":732,"title":{},"body":{"classes/Traffic.html":{}}}],["detector",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["determines",{"_index":178,"title":{},"body":{"injectables/AlertService.html":{}}}],["devbuild",{"_index":904,"title":{},"body":{"index.html":{}}}],["development",{"_index":899,"title":{},"body":{"index.html":{}}}],["device",{"_index":737,"title":{},"body":{"classes/Traffic.html":{}}}],["devkit/build",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["directive",{"_index":122,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["directives",{"_index":145,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["directives/alert.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":914,"title":{},"body":{"index.html":{}}}],["display",{"_index":108,"title":{},"body":{"components/AlertComponent.html":{},"components/ProfilePageComponent.html":{}}}],["displays",{"_index":97,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["distances",{"_index":738,"title":{},"body":{"classes/Traffic.html":{}}}],["documentation",{"_index":818,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":75,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["dragdropmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamic",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":922,"title":{},"body":{"index.html":{}}}],["easy",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eddystone",{"_index":414,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{}}}],["element",{"_index":121,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["email",{"_index":687,"title":{},"body":{"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{}}}],["emitlogin",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["emitlogin(success",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["emitloginsource",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["emitlogoutsource",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["emits",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["empty",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["end",{"_index":921,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epoch",{"_index":453,"title":{},"body":{"injectables/BeaconService.html":{}}}],["err",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["error",{"_index":154,"title":{},"body":{"injectables/AlertService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["error(message",{"_index":164,"title":{},"body":{"injectables/AlertService.html":{}}}],["error.error",{"_index":518,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.status",{"_index":526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorevent",{"_index":519,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":266,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":491,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["event",{"_index":189,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["events",{"_index":150,"title":{},"body":{"injectables/AlertService.html":{}}}],["execute",{"_index":918,"title":{},"body":{"index.html":{}}}],["exist",{"_index":646,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["export",{"_index":49,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["f",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fa",{"_index":57,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["false",{"_index":170,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":59,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["fas",{"_index":56,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["fields",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["first",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["flashlight",{"_index":39,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["foot",{"_index":729,"title":{},"body":{"classes/Traffic.html":{}}}],["forbidden",{"_index":509,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["form",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["format",{"_index":28,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["formbuilder",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":647,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":138,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["found.component",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.html",{"_index":648,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":644,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:10",{"_index":649,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:20",{"_index":650,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["free",{"_index":576,"title":{},"body":{"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["frontend",{"_index":880,"title":{},"body":{"index.html":{}}}],["full",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":924,"title":{},"body":{"index.html":{}}}],["generate",{"_index":912,"title":{},"body":{"index.html":{}}}],["getall",{"_index":756,"title":{},"body":{"injectables/UserService.html":{}}}],["getbeacons",{"_index":424,"title":{},"body":{"injectables/BeaconService.html":{}}}],["getbyid",{"_index":425,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["getbyid(id",{"_index":439,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["getf",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getmessage",{"_index":155,"title":{},"body":{"injectables/AlertService.html":{}}}],["getter",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":878,"title":{"index.html":{}},"body":{}}],["gettrafficbyid",{"_index":426,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbyid(id",{"_index":442,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbyidandtype",{"_index":427,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbyidandtype(id",{"_index":445,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbymin",{"_index":428,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbymin(id",{"_index":447,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbyminmax",{"_index":429,"title":{},"body":{"injectables/BeaconService.html":{}}}],["gettrafficbyminmax(id",{"_index":454,"title":{},"body":{"injectables/BeaconService.html":{}}}],["getuser",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{},"injectables/UserService.html":{}}}],["getuser().name",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["github",{"_index":883,"title":{},"body":{"index.html":{}}}],["go",{"_index":927,"title":{},"body":{"index.html":{}}}],["gracefully",{"_index":492,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["graph",{"_index":411,"title":{},"body":{"classes/Beacon.html":{}}}],["graph_time_period",{"_index":397,"title":{},"body":{"classes/Beacon.html":{}}}],["group",{"_index":751,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["group.name",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["groupname",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["groups",{"_index":746,"title":{},"body":{"classes/User.html":{}}}],["guard",{"_index":331,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["handle",{"_index":523,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["handler",{"_index":551,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["handles",{"_index":421,"title":{},"body":{"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["header",{"_index":554,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["height",{"_index":692,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["help",{"_index":925,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["helpers/config",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["helpers/error.interceptor",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["helpers/jwt.interceptor",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["helps",{"_index":159,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["here",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["heroku",{"_index":897,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":536,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LandingPageComponent.html":{}}}],["hooked",{"_index":885,"title":{},"body":{"index.html":{}}}],["html",{"_index":120,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["http",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["http_interceptors",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":511,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":499,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":512,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":497,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://janbro.github.io/pibeac",{"_index":881,"title":{},"body":{"index.html":{}}}],["https://localhost:8080/api",{"_index":902,"title":{},"body":{"index.html":{}}}],["https://pibeac.herokuapp.com",{"_index":898,"title":{},"body":{"index.html":{}}}],["icon",{"_index":29,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["id",{"_index":20,"title":{},"body":{"pipes/ActionPipe.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":51,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["import",{"_index":45,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["imports",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["incoming",{"_index":501,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":88,"title":{"index.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["information",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"injectables/BeaconService.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["initialization",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["initialize",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inject",{"_index":80,"title":{},"body":{"components/AlertComponent.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["instanceof",{"_index":190,"title":{},"body":{"injectables/AlertService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["int",{"_index":418,"title":{},"body":{"classes/Beacon.html":{}}}],["intended",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["intercept",{"_index":493,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":496,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":487,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":488,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercepts",{"_index":490,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["internet",{"_index":528,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["invalid",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["invisible",{"_index":673,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["js",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":556,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["json.parse(this.cookie.get('token",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["jwt",{"_index":547,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["jwtinterceptor",{"_index":267,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":920,"title":{},"body":{"index.html":{}}}],["keep",{"_index":180,"title":{},"body":{"injectables/AlertService.html":{}}}],["keepafternavigationchange",{"_index":151,"title":{},"body":{"injectables/AlertService.html":{}}}],["keeps",{"_index":171,"title":{},"body":{"injectables/AlertService.html":{}}}],["kind",{"_index":26,"title":{},"body":{"pipes/ActionPipe.html":{},"classes/Beacon.html":{}}}],["landing",{"_index":132,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["landingpagecomponent",{"_index":131,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":701,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["legend",{"_index":119,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"overview.html":{}}}],["lightbulb",{"_index":60,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["link",{"_index":58,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["list",{"_index":438,"title":{},"body":{"injectables/BeaconService.html":{}}}],["literal",{"_index":402,"title":{},"body":{"classes/Beacon.html":{},"classes/User.html":{}}}],["load",{"_index":568,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["loading",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["locally",{"_index":907,"title":{},"body":{"index.html":{}}}],["location",{"_index":193,"title":{},"body":{"injectables/AlertService.html":{}}}],["logged",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":136,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["login'},{'name",{"_index":134,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["login(username",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":133,"title":{"components/LoginComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginemitted",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginpagecomponent",{"_index":135,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["logoutemitted",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logs",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["made",{"_index":529,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["main",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["manage",{"_index":573,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["manager",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["margin",{"_index":693,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["master",{"_index":894,"title":{},"body":{"index.html":{}}}],["matching",{"_index":69,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":455,"title":{},"body":{"injectables/BeaconService.html":{}}}],["maximum",{"_index":481,"title":{},"body":{"injectables/BeaconService.html":{}}}],["merged",{"_index":893,"title":{},"body":{"index.html":{}}}],["message",{"_index":79,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["message.text",{"_index":118,"title":{},"body":{"components/AlertComponent.html":{}}}],["messages",{"_index":106,"title":{},"body":{"components/AlertComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":448,"title":{},"body":{"injectables/BeaconService.html":{}}}],["minimum",{"_index":450,"title":{},"body":{"injectables/BeaconService.html":{}}}],["miscellaneous",{"_index":936,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/beacon.model",{"_index":472,"title":{},"body":{"injectables/BeaconService.html":{}}}],["models/user.model",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":253,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":255,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["mongodb",{"_index":400,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{},"classes/User.html":{}}}],["more",{"_index":926,"title":{},"body":{"index.html":{}}}],["ms",{"_index":452,"title":{},"body":{"injectables/BeaconService.html":{}}}],["multi",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":10,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navigate",{"_index":160,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["navigation",{"_index":172,"title":{},"body":{"injectables/AlertService.html":{}}}],["navigationstart",{"_index":185,"title":{},"body":{"injectables/AlertService.html":{}}}],["network",{"_index":521,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["new",{"_index":181,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":498,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{}}}],["next.handle(request",{"_index":561,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(error",{"_index":517,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":91,"title":{},"body":{"components/AlertComponent.html":{}}}],["ngoninit",{"_index":92,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["ngx",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{},"dependencies.html":{}}}],["none",{"_index":31,"title":{},"body":{"pipes/ActionPipe.html":{},"components/ProfilePageComponent.html":{}}}],["notfound",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["notification",{"_index":167,"title":{},"body":{"injectables/AlertService.html":{}}}],["notifications",{"_index":98,"title":{},"body":{"components/AlertComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["now",{"_index":572,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["npm",{"_index":903,"title":{},"body":{"index.html":{}}}],["number",{"_index":14,"title":{},"body":{"pipes/ActionPipe.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["object",{"_index":168,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":401,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{},"classes/User.html":{}}}],["observable",{"_index":175,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["occurred",{"_index":522,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["old",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["oldgroupname",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["ondestroy",{"_index":83,"title":{},"body":{"components/AlertComponent.html":{}}}],["oninit",{"_index":82,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["onsubmit",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":670,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["option",{"_index":15,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["optional",{"_index":24,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["order",{"_index":571,"title":{},"body":{"components/LandingPageComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ProfilePageComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":932,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":469,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["owner",{"_index":398,"title":{},"body":{"classes/Beacon.html":{}}}],["owns",{"_index":742,"title":{},"body":{"classes/User.html":{}}}],["package",{"_index":840,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":503,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["page",{"_index":99,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page'},{'name",{"_index":130,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":652,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["page.component.html",{"_index":565,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts",{"_index":563,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":566,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts:20",{"_index":567,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts:47",{"_index":661,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["page.component.ts:52",{"_index":658,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["page.component.ts:57",{"_index":655,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["page.component.ts:86",{"_index":657,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["page.component.ts:95",{"_index":656,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["pagenotfoundcomponent",{"_index":137,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":81,"title":{},"body":{"components/AlertComponent.html":{}}}],["param",{"_index":52,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["parses",{"_index":550,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["pass",{"_index":895,"title":{},"body":{"index.html":{}}}],["passed",{"_index":441,"title":{},"body":{"injectables/BeaconService.html":{}}}],["password",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pathmatch",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["period",{"_index":410,"title":{},"body":{"classes/Beacon.html":{},"injectables/BeaconService.html":{}}}],["pibeac",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["pibeacons",{"_index":743,"title":{},"body":{"classes/User.html":{}}}],["pipe",{"_index":0,"title":{"pipes/ActionPipe.html":{}},"body":{"pipes/ActionPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(first",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe({name",{"_index":48,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["pipes",{"_index":2,"title":{},"body":{"pipes/ActionPipe.html":{},"modules/AppModule.html":{}}}],["pipes/action.pipe",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":46,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["plaintext",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["point",{"_index":901,"title":{},"body":{"index.html":{}}}],["position",{"_index":699,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["previous",{"_index":577,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["primary",{"_index":63,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["private",{"_index":89,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["production",{"_index":905,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":140,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["profile/:id",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["profilepagecomponent",{"_index":139,"title":{"components/ProfilePageComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":444,"title":{},"body":{"injectables/BeaconService.html":{}}}],["properties",{"_index":33,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":923,"title":{},"body":{"index.html":{}}}],["provide",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pswd",{"_index":653,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["pswdr",{"_index":654,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["pull",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["push",{"_index":891,"title":{},"body":{"index.html":{}}}],["queryparams",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":928,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":645,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["redirects",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["refused",{"_index":505,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["register",{"_index":144,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BeaconService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":142,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["register(beacon",{"_index":459,"title":{},"body":{"injectables/BeaconService.html":{}}}],["register(user",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":141,"title":{"components/RegisterComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerpagecomponent",{"_index":143,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registration",{"_index":704,"title":{},"body":{"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["relativeto",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["removes",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["renders",{"_index":642,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["repo",{"_index":884,"title":{},"body":{"index.html":{}}}],["request",{"_index":436,"title":{},"body":{"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["request.clone",{"_index":558,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requests",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["required",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["response",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["responses",{"_index":502,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["result",{"_index":68,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":70,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{}}}],["retrieves",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":55,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":539,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":32,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["retype",{"_index":688,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["right",{"_index":696,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["root",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":127,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["route",{"_index":187,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["router",{"_index":157,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["router.events.subscribe(event",{"_index":188,"title":{},"body":{"injectables/AlertService.html":{}}}],["router.navigatebyurl",{"_index":678,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["routermodule",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["run",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["running",{"_index":915,"title":{},"body":{"index.html":{}}}],["runs",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterPageComponent.html":{},"index.html":{}}}],["rxjs",{"_index":111,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":515,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/RegisterComponent.html":{}}}],["save",{"_index":689,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["scaffolding",{"_index":911,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":412,"title":{},"body":{"classes/Beacon.html":{}}}],["see",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["selector",{"_index":84,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["sending",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["sends",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["serve",{"_index":909,"title":{},"body":{"index.html":{}}}],["servedocs",{"_index":910,"title":{},"body":{"index.html":{}}}],["service",{"_index":105,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"components/ProfilePageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["services/alert.service",{"_index":112,"title":{},"body":{"components/AlertComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["services/authentication.service",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["services/beacon.service",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["services/user.service",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["set",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ProfilePageComponent.html":{},"injectables/UserService.html":{}}}],["setbeacons",{"_index":430,"title":{},"body":{"injectables/BeaconService.html":{}}}],["setbeacons(beacons",{"_index":461,"title":{},"body":{"injectables/BeaconService.html":{}}}],["setheaders",{"_index":559,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["sets",{"_index":463,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["settimeout",{"_index":679,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["settings",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(user",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["show",{"_index":169,"title":{},"body":{"injectables/AlertService.html":{}}}],["shows",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["side",{"_index":520,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["single",{"_index":192,"title":{},"body":{"injectables/AlertService.html":{}}}],["site",{"_index":564,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["specific",{"_index":730,"title":{},"body":{"classes/Traffic.html":{}}}],["specified",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["spinner",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/beacon",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["src/app/components/landing",{"_index":562,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":641,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/components/login.component.ts",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login.component.ts:20",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:25",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:30",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:35",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:56",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:77",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login.component.ts:82",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/page",{"_index":643,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/profile",{"_index":651,"title":{},"body":{"components/ProfilePageComponent.html":{},"coverage.html":{}}}],["src/app/components/register",{"_index":726,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/components/register.component.ts",{"_index":703,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register.component.ts:20",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register.component.ts:25",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register.component.ts:30",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register.component.ts:49",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register.component.ts:61",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register.component.ts:66",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/directives/alert.component.ts",{"_index":77,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/app/directives/alert.component.ts:17",{"_index":109,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/directives/alert.component.ts:21",{"_index":96,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/directives/alert.component.ts:33",{"_index":103,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/directives/alert.component.ts:42",{"_index":100,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:22",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:9",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/helpers/error.interceptor.ts",{"_index":489,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/error.interceptor.ts:13",{"_index":495,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/error.interceptor.ts:35",{"_index":500,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/jwt.interceptor.ts",{"_index":546,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/jwt.interceptor.ts:16",{"_index":548,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/models/beacon.model.ts",{"_index":391,"title":{},"body":{"classes/Beacon.html":{},"coverage.html":{}}}],["src/app/models/beacon.model.ts:12",{"_index":413,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:16",{"_index":416,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:20",{"_index":417,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:24",{"_index":404,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:28",{"_index":408,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:32",{"_index":403,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/beacon.model.ts:8",{"_index":399,"title":{},"body":{"classes/Beacon.html":{}}}],["src/app/models/traffic.model.ts",{"_index":727,"title":{},"body":{"classes/Traffic.html":{},"coverage.html":{}}}],["src/app/models/traffic.model.ts:12",{"_index":734,"title":{},"body":{"classes/Traffic.html":{}}}],["src/app/models/traffic.model.ts:16",{"_index":739,"title":{},"body":{"classes/Traffic.html":{}}}],["src/app/models/traffic.model.ts:20",{"_index":735,"title":{},"body":{"classes/Traffic.html":{}}}],["src/app/models/traffic.model.ts:8",{"_index":733,"title":{},"body":{"classes/Traffic.html":{}}}],["src/app/models/user.model.ts",{"_index":740,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:12",{"_index":750,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:16",{"_index":749,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:20",{"_index":747,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:24",{"_index":745,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:8",{"_index":748,"title":{},"body":{"classes/User.html":{}}}],["src/app/pipes/action.pipe.ts",{"_index":6,"title":{},"body":{"pipes/ActionPipe.html":{},"coverage.html":{}}}],["src/app/pipes/action.pipe.ts:11",{"_index":43,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["src/app/pipes/action.pipe.ts:30",{"_index":18,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["src/app/services/alert.service.ts",{"_index":149,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:13",{"_index":182,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:18",{"_index":158,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:46",{"_index":177,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:57",{"_index":165,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:65",{"_index":162,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:72",{"_index":174,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/authentication.service.ts",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:15",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:20",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:30",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:46",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:53",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/beacon.service.ts",{"_index":420,"title":{},"body":{"injectables/BeaconService.html":{},"coverage.html":{}}}],["src/app/services/beacon.service.ts:102",{"_index":440,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:109",{"_index":460,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:116",{"_index":466,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:125",{"_index":435,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:15",{"_index":468,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:20",{"_index":433,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:32",{"_index":462,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:39",{"_index":437,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:46",{"_index":467,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:63",{"_index":443,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:73",{"_index":446,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:83",{"_index":449,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/beacon.service.ts:94",{"_index":456,"title":{},"body":{"injectables/BeaconService.html":{}}}],["src/app/services/user.service.ts",{"_index":752,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:100",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:110",{"_index":763,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:119",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:126",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:133",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:142",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:151",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:158",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":761,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:41",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:48",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:55",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:65",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:89",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":879,"title":{"index.html":{}},"body":{}}],["starting",{"_index":569,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["state",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfilePageComponent.html":{}}}],["state('invisible",{"_index":671,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["state('visible",{"_index":669,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["state.url",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":34,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["status",{"_index":184,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["stop",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["stores",{"_index":728,"title":{},"body":{"classes/Traffic.html":{}}}],["stream",{"_index":471,"title":{},"body":{"injectables/BeaconService.html":{}}}],["string",{"_index":16,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"components/LoginComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{}}}],["style",{"_index":663,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["styles",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["styleurls",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["subject",{"_index":152,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["submitted",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":104,"title":{},"body":{"components/AlertComponent.html":{},"injectables/BeaconService.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["subscribes",{"_index":110,"title":{},"body":{"components/AlertComponent.html":{}}}],["subscription",{"_index":90,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["success",{"_index":66,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{}}}],["success(message",{"_index":176,"title":{},"body":{"injectables/AlertService.html":{}}}],["successful",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["such",{"_index":393,"title":{},"body":{"classes/Beacon.html":{}}}],["support",{"_index":929,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":930,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":53,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["table",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":510,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/UserService.html":{}}}],["template",{"_index":74,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["templateurl",{"_index":86,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["test",{"_index":917,"title":{},"body":{"index.html":{}}}],["tests",{"_index":889,"title":{},"body":{"index.html":{}}}],["text",{"_index":64,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{}}}],["this.alertservice.error(error",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.alertservice.getmessage().subscribe(message",{"_index":115,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertservice.success('registration",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authenticationservice.emitlogin(true",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.login(this.f.username.value",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["this.beacons",{"_index":474,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.beacons.asobservable",{"_index":470,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.beacons.next(beacons",{"_index":473,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.change.asobservable",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["this.change.next(undefined",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["this.change.next(user",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["this.change.subscribe((value",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["this.clearuser",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookie.delete('token",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.cookieservice.get('token",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.emitloginsource.asobservable",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.emitloginsource.next(success",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.emitlogoutsource.asobservable",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.emitlogoutsource.next(true",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.f.password.value",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.username.setvalue(this.route.snapshot.queryparams['username",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.http.delete(`${config.apiurl}/beacons",{"_index":486,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.delete(`${config.apiurl}/users",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`${config.apiurl}/users/beacons",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${config.apiurl}/beacons",{"_index":475,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.get(`${config.apiurl}/traffic/${id",{"_index":478,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.get(`${config.apiurl}/traffic/${id}?min=${min",{"_index":480,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.get(`${config.apiurl}/traffic/${id}?min=${min}&max=${max",{"_index":482,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.get(`${config.apiurl}/traffic/${id}?type=${type",{"_index":479,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.get(`${config.apiurl}/users",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.patch(`${config.apiurl}/beacons",{"_index":484,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.post(`${config.apiurl}/beacons",{"_index":483,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.http.post(`${config.apiurl}/users/beacons",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${config.apiurl}/users/login",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(`${config.apiurl}/users/register",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${config.apiurl}/users",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${config.apiurl}/users/beacons",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["this.keepafternavigationchange",{"_index":191,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.loading",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loginform",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.message",{"_index":116,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.ngoninit",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["this.registerform",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.returnurl",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['username",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":530,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/login",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl",{"_index":685,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["this.setbeacons(data",{"_index":476,"title":{},"body":{"injectables/BeaconService.html":{}}}],["this.setuser(data",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["this.subject.asobservable",{"_index":196,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next",{"_index":194,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next(undefined",{"_index":195,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.submitted",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.subscription",{"_index":114,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":117,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.token",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":680,"title":{},"body":{"components/ProfilePageComponent.html":{},"injectables/UserService.html":{}}}],["this.userservice.clearuser",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getuser",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePageComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.updateuser(json.parse(this.cookie.get('token')).id",{"_index":684,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["this.userservice.updateuser(this.token.id",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["throwerror",{"_index":513,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror('connection",{"_index":527,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror('not",{"_index":537,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror('something",{"_index":531,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error.error",{"_index":525,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":409,"title":{},"body":{"classes/Beacon.html":{},"injectables/BeaconService.html":{},"classes/Traffic.html":{}}}],["title",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{}}}],["tokens",{"_index":549,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["top",{"_index":694,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["traffic",{"_index":407,"title":{"classes/Traffic.html":{}},"body":{"classes/Beacon.html":{},"injectables/BeaconService.html":{},"classes/Traffic.html":{},"coverage.html":{}}}],["transform",{"_index":12,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["transform(value",{"_index":13,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["transforms",{"_index":19,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["transition",{"_index":664,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["transition('invisible",{"_index":675,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["transition('visible",{"_index":672,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["travis",{"_index":886,"title":{},"body":{"index.html":{}}}],["tree",{"_index":76,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["trigger",{"_index":665,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["trigger('fade",{"_index":668,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["triggers",{"_index":464,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["true",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ProfilePageComponent.html":{}}}],["type",{"_index":23,"title":{},"body":{"pipes/ActionPipe.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/Traffic.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":415,"title":{},"body":{"classes/Beacon.html":{},"classes/Traffic.html":{},"injectables/UserService.html":{}}}],["undefined",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["unit",{"_index":916,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":101,"title":{},"body":{"components/AlertComponent.html":{}}}],["unsuccessful",{"_index":540,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["up",{"_index":574,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["update",{"_index":431,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["update(beacon",{"_index":465,"title":{},"body":{"injectables/BeaconService.html":{}}}],["update(user",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["updatebeacongroup",{"_index":758,"title":{},"body":{"injectables/UserService.html":{}}}],["updatebeacongroup(beacon_id",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["updatebeaconorder",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["updatebeaconorder(group",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["updatebeacons",{"_index":432,"title":{},"body":{"injectables/BeaconService.html":{}}}],["updated",{"_index":422,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":166,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/BeaconService.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":760,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(id",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":37,"title":{},"body":{"pipes/ActionPipe.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["use",{"_index":913,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ProfilePageComponent.html":{}}}],["user",{"_index":61,"title":{"classes/User.html":{}},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["user.model.ts",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{}}}],["users",{"_index":161,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":210,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice.getuser",{"_index":681,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["userservice.updated$.subscribe(success",{"_index":677,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["utc",{"_index":451,"title":{},"body":{"injectables/BeaconService.html":{},"classes/Traffic.html":{}}}],["valid",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validation",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":25,"title":{},"body":{"pipes/ActionPipe.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{},"injectables/BeaconService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["var",{"_index":123,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{}}}],["variable",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["variables",{"_index":937,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":660,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["via",{"_index":919,"title":{},"body":{"index.html":{}}}],["visible",{"_index":676,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["void",{"_index":102,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/BeaconService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfilePageComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["warning",{"_index":65,"title":{},"body":{"pipes/ActionPipe.html":{}}}],["web",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["went",{"_index":532,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["whenever",{"_index":890,"title":{},"body":{"index.html":{}}}],["whether",{"_index":179,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{},"classes/Beacon.html":{}}}],["width",{"_index":690,"title":{},"body":{"components/ProfilePageComponent.html":{}}}],["within",{"_index":457,"title":{},"body":{"injectables/BeaconService.html":{},"injectables/UserService.html":{}}}],["wrong",{"_index":533,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["zone",{"_index":458,"title":{},"body":{"injectables/BeaconService.html":{}}}],["zone.js",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"pipes/ActionPipe.html":{"url":"pipes/ActionPipe.html","title":"pipe - ActionPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ActionPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/action.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Action pipe\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        action\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number, option: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/action.pipe.ts:30\n                \n            \n\n\n            \n                \n                    Transforms the action id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The kind value of the action\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The desired format (icon, color, none)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        name: 'URL',\n        id: 0\n    },\n    {\n        name: 'Flashlight',\n        id: 1\n    },\n    {\n        name: 'Check-In',\n        id: 2\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pipes/action.pipe.ts:11\n                            \n                        \n\n                \n                    \n                        Available actions\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Action pipe\n */\n@Pipe({name: 'action'})\nexport class ActionPipe implements PipeTransform {\n\n    /**\n     * Available actions\n     */\n    static actions = [{\n        name: 'URL',\n        id: 0\n    },\n    {\n        name: 'Flashlight',\n        id: 1\n    },\n    {\n        name: 'Check-In',\n        id: 2\n    }];\n\n    /**\n     * Transforms the action id\n     *\n     * @param value The kind value of the action\n     * @param option The desired format (icon, color, none)\n     */\n    transform(value: number, option: string): string {\n        switch (option) {\n            case 'icon':\n                switch (value) {\n                    case 0:\n                        return 'fas fa-link';\n                    case 1:\n                        return 'far fa-lightbulb';\n                    case 2:\n                        return 'fas fa-user-check';\n                    default:\n                        return;\n                }\n            case 'color':\n                switch (value) {\n                    case 0:\n                        return 'border-primary text-primary';\n                    case 1:\n                        return 'border-warning text-warning';\n                    case 2:\n                        return 'border-success text-success';\n                    default:\n                        return;\n                }\n            default:\n                return ActionPipe.actions[value].name;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/directives/alert.component.ts\n\n\n    \n        Description\n    \n    \n        Alert message component to inject into pages\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert\n            \n\n\n\n\n            \n                templateUrl\n                alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/alert.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications for the page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/alert.component.ts:42\n                \n            \n\n\n            \n                \n                    Unsubscribe to alertService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/alert.component.ts:33\n                \n            \n\n\n            \n                \n                    Subscribe to alert service messages\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/alert.component.ts:21\n                            \n                        \n\n                \n                    \n                        Current message to display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/alert.component.ts:17\n                            \n                        \n\n                \n                    \n                        Subscribes to alert messages\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../services/alert.service';\n\n/**\n * Alert message component to inject into pages\n */\n@Component({\n    selector: 'app-alert',\n    templateUrl: 'alert.component.html'\n})\nexport class AlertComponent implements OnInit, OnDestroy {\n    /**\n     * Subscribes to alert messages\n     */\n    private subscription: Subscription;\n    /**\n     * Current message to display\n     */\n    message: any;\n\n    /**\n     * Constructor\n     *\n     * @param alertService Displays notifications for the page\n     */\n    constructor(private alertService: AlertService) { }\n\n    /**\n     * Subscribe to alert service messages\n     */\n    ngOnInit() {\n        this.subscription = this.alertService.getMessage().subscribe(message => {\n            this.message = message;\n        });\n    }\n\n    /**\n     * Unsubscribe to alertService\n     */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n\n    \n\n    \n        {{message.text}}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{message.text}}'\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n            \n                Description\n            \n            \n                Alert service with subscription events\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keepAfterNavigationChange\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                error\n                            \n                            \n                                getMessage\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:65\n                \n            \n\n\n            \n                \n                    Clears the current alert\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, keepAfterNavigationChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:57\n                \n            \n\n\n            \n                \n                    Updates the notification object with an error message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to show the user\n\n                                    \n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Keeps the notification after a navigation change\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:72\n                \n            \n\n\n            \n                \n                    Returns the subject as an Observable\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, keepAfterNavigationChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:46\n                \n            \n\n\n            \n                \n                    Updates the notification object with a success message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to show the user\n\n                                    \n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Keeps the notification after a navigation change\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keepAfterNavigationChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:18\n                            \n                        \n\n                \n                    \n                        Determines whether to keep the notification after page navigation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:13\n                            \n                        \n\n                \n                    \n                        Contains the message text and status\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Alert service with subscription events\n */\n@Injectable()\nexport class AlertService {\n    /**\n     * Contains the message text and status\n     */\n    private subject = new Subject();\n\n    /**\n     * Determines whether to keep the notification after page navigation\n     */\n    private keepAfterNavigationChange = false;\n\n    /**\n     * Constructor\n     *\n     * @param router Helps navigate users\n     */\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    /**\n     * Updates the notification object with a success message\n     *\n     * @param message Message to show the user\n     * @param keepAfterNavigationChange Keeps the notification after a navigation change\n     */\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    /**\n     * Updates the notification object with an error message\n     *\n     * @param message Message to show the user\n     * @param keepAfterNavigationChange Keeps the notification after a navigation change\n     */\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    /**\n     * Clears the current alert\n     */\n    clear() {\n        this.subject.next(undefined);\n    }\n\n    /**\n     * Returns the subject as an Observable\n     */\n    getMessage(): Observable {\n        return this.subject.asObservable();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main app component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookie: CookieService, userService: UserService, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cookie\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to retrieve and set cookies\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Updates information for logged in user\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for authenticating user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:65\n                \n            \n\n\n            \n                \n                    Returns the currently logged in user\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:72\n                \n            \n\n\n            \n                \n                    Logs out the user and clears the user object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    Runs on initialization of page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pibeac'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        Title of the web page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        User token\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { UserService } from './services/user.service';\nimport { AuthenticationService } from './services/authentication.service';\n\n/**\n * Main app component\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    /**\n     * Title of the web page\n     */\n    title = 'pibeac';\n\n    /**\n     * User token\n     */\n    token: any;\n\n    /**\n     * Constructor\n     *\n     * @param cookie Used to retrieve and set cookies\n     * @param userService Updates information for logged in user\n     * @param authenticationService Used for authenticating user\n     */\n    constructor(private cookie: CookieService,\n        private userService: UserService,\n        private authenticationService: AuthenticationService) {\n\n        authenticationService.loginEmitted$.subscribe(success => {\n            if (success) {\n                this.ngOnInit();\n            }\n        });\n\n        authenticationService.logoutEmitted$.subscribe(success => {\n            if (success) {\n                this.userService.clearUser();\n            }\n        });\n    }\n\n    /**\n     * Runs on initialization of page\n     */\n    ngOnInit() {\n        try {\n            this.token = JSON.parse(this.cookie.get('token'));\n            this.userService.updateUser(this.token.id);\n        } catch (err) {\n            this.userService.clearUser();\n        }\n    }\n\n    /**\n     * Returns the currently logged in user\n     */\n    getUser() {\n        return this.userService.getUser();\n    }\n\n    /**\n     * Logs out the user and clears the user object\n     */\n    logout() {\n        this.authenticationService.logout();\n    }\n}\n\n    \n\n    \n        \n\n\n    \n    \n        \n    \n    \n        \n            \n                Login\n            \n            \n                Register\n            \n        \n        \n            \n                {{getUser().name}}\n            \n            \n                My Beacons\n            \n            \n                Logout\n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .bg-pibeac {\n    background-color: #008577 !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Login                                        Register                                                        {{getUser().name}}                                        My Beacons                                        Logout                        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nActionPipe\n\nActionPipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionPipe->AppModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBeaconManagerPageComponent\n\nBeaconManagerPageComponent\n\nAppModule -->\n\nBeaconManagerPageComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfilePageComponent\n\nProfilePageComponent\n\nAppModule -->\n\nProfilePageComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAppModule -->\n\nRegisterPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nBeaconService\n\nBeaconService\n\nAppModule -->\n\nBeaconService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionPipe\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BeaconManagerPageComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ProfilePageComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterPageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AlertService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            BeaconService\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ChartsModule } from 'ng2-charts';\n\n// Components\nimport { AlertComponent } from './directives/alert.component';\nimport { BeaconManagerPageComponent } from './components/beacon-manager-page.component';\nimport { LandingPageComponent } from './components/landing-page.component';\nimport { LoginComponent } from './components/login.component';\nimport { LoginPageComponent } from './components/login-page.component';\nimport { PageNotFoundComponent } from './components/page-not-found.component';\nimport { ProfilePageComponent } from './components/profile-page.component';\nimport { RegisterComponent } from './components/register.component';\nimport { RegisterPageComponent } from './components/register-page.component';\n\n// Services\nimport { AlertService } from './services/alert.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { BeaconService } from './services/beacon.service';\nimport { UserService } from './services/user.service';\n\n// Guards\nimport { AuthGuard } from './guards/auth.guard';\n\n// Helpers\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\n\n// Pipes\nimport { ActionPipe } from './pipes/action.pipe';\n\nimport { AppComponent } from './app.component';\n\n/**\n * App routes\n */\nconst appRoutes: Routes = [\n  { path: 'beacons', component: BeaconManagerPageComponent },\n  { path: 'profile/:id',  component: ProfilePageComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'register', component: RegisterPageComponent },\n  { path: 'notfound', component: PageNotFoundComponent},\n  { path: '', component: LandingPageComponent, pathMatch: 'full' }\n//   { path: '**', redirectTo: 'notfound', pathMatch: 'full' }\n];\n\n/**\n * App module of pibeac web application\n */\n@NgModule({\n    declarations: [\n        AppComponent,\n        ActionPipe,\n        AlertComponent,\n        BeaconManagerPageComponent,\n        LandingPageComponent,\n        LoginComponent,\n        LoginPageComponent,\n        PageNotFoundComponent,\n        ProfilePageComponent,\n        RegisterComponent,\n        RegisterPageComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        ChartsModule,\n        DragDropModule,\n        FormsModule,\n        HttpClientModule,\n        NgbModule,\n        ReactiveFormsModule,\n        RouterModule.forRoot(appRoutes)\n    ],\n    providers: [\n        AuthGuard,\n        AlertService,\n        AuthenticationService,\n        BeaconService,\n        CookieService,\n        UserService,\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Authentication guard\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to retrieve and set cookies\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:22\n                \n            \n\n\n            \n                \n                    Guard for checking a users token is valid\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n/**\n * Authentication guard\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    /**\n     * Constructor\n     *\n     * @param router Helps navigate users\n     * @param cookieService Used to retrieve and set cookies\n     */\n    constructor(private router: Router, private cookieService: CookieService) { }\n\n    /**\n     * Guard for checking a users token is valid\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.cookieService.get('token')) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for authenticating the user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitLoginSource\n                            \n                            \n                                    Private\n                                emitLogoutSource\n                            \n                            \n                                loginEmitted$\n                            \n                            \n                                logoutEmitted$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitLogin\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookie: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http client for sending requests\n\n                                                        \n                                                \n                                                \n                                                        cookie\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to retrieve and set cookies\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitLogin\n                        \n                        \n                    \n                \n            \n            \n                \nemitLogin(success)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n                    Emits a login event with whether or not the login was successful\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    success\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If the login was successful\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:46\n                \n            \n\n\n            \n                \n                    Sends the user credentials to the backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Plaintext password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:53\n                \n            \n\n\n            \n                \n                    Removes the user token and emits a logout event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitLoginSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                        Login event source\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitLogoutSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n                \n                    \n                        Logout event source\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginEmitted$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.emitLoginSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:20\n                            \n                        \n\n                \n                    \n                        Login observable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoutEmitted$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.emitLogoutSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:30\n                            \n                        \n\n                \n                    \n                        Logout observable\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport config from '../helpers/config';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Subject } from 'rxjs';\n\n/**\n * Service for authenticating the user\n */\n@Injectable()\nexport class AuthenticationService {\n    /**\n     * Login event source\n     */\n    private emitLoginSource = new Subject();\n\n    /**\n     * Login observable\n     */\n    loginEmitted$ = this.emitLoginSource.asObservable();\n\n    /**\n     * Logout event source\n     */\n    private emitLogoutSource = new Subject();\n\n    /**\n     * Logout observable\n     */\n    logoutEmitted$ = this.emitLogoutSource.asObservable();\n\n    /**\n     * Constructor\n     *\n     * @param http Http client for sending requests\n     * @param cookie Used to retrieve and set cookies\n     */\n    constructor(private http: HttpClient, private cookie: CookieService) { }\n\n    /**\n     * Sends the user credentials to the backend\n     *\n     * @param username Username\n     * @param password Plaintext password\n     */\n    login(username: string, password: string) {\n        return this.http.post(`${config.apiUrl}/users/login`, { username: username, password: password }, { observe: 'response' });\n    }\n\n    /**\n     * Removes the user token and emits a logout event\n     */\n    logout() {\n        this.cookie.delete('token');\n        this.emitLogoutSource.next(true);\n    }\n\n    /**\n     * Emits a login event with whether or not the login was successful\n     *\n     * @param success If the login was successful\n     */\n    emitLogin(success: true) {\n        this.emitLoginSource.next(success);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Beacon.html":{"url":"classes/Beacon.html","title":"class - Beacon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Beacon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/beacon.model.ts\n        \n\n            \n                Description\n            \n            \n                Beacon data such as associated action\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                collect_data\n                            \n                            \n                                    Optional\n                                graph_time_period\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:8\n                            \n                        \n\n                \n                    \n                        MongoDB ObjectId\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:32\n                            \n                        \n\n                \n                    \n                        Action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collect_data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:24\n                            \n                        \n\n                \n                    \n                        Whether or not to collect anonymous traffic data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            graph_time_period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:28\n                            \n                        \n\n                \n                    \n                        What time period graph should be in seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:12\n                            \n                        \n\n                \n                    \n                        Eddystone-UID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:16\n                            \n                        \n\n                \n                    \n                        Beacon name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/beacon.model.ts:20\n                            \n                        \n\n                \n                    \n                        Owner id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Beacon {\n    /**\n     * MongoDB ObjectId\n     */\n    _id?: string;\n    /**\n     * Eddystone-UID\n     */\n    id: number;\n    /**\n     * Beacon name\n     */\n    name: string;\n    /**\n     * Owner id\n     */\n    owner?: string;\n    /**\n     * Whether or not to collect anonymous traffic data\n     */\n    collect_data: boolean;\n    /**\n     * What time period graph should be in seconds\n     */\n    graph_time_period?: string;\n    /**\n     * Action\n     */\n    action: {\n        /**\n         * Int value associated with beacon action\n         */\n        kind: number;\n        /**\n         * Value assigned to beacon\n         */\n        value: string;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeaconService.html":{"url":"injectables/BeaconService.html","title":"injectable - BeaconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BeaconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/beacon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which handles beacon data requests\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beacons\n                            \n                            \n                                updated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                getBeacons\n                            \n                            \n                                getById\n                            \n                            \n                                getTrafficById\n                            \n                            \n                                getTrafficByIdAndType\n                            \n                            \n                                getTrafficByMin\n                            \n                            \n                                getTrafficByMinMax\n                            \n                            \n                                register\n                            \n                            \n                                setBeacons\n                            \n                            \n                                update\n                            \n                            \n                                updateBeacons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/beacon.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http client for sending requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:125\n                \n            \n\n\n            \n                \n                    Sends a request to the backend to delete beacon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBeacons\n                        \n                        \n                    \n                \n            \n            \n                \ngetBeacons()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:39\n                \n            \n\n\n            \n                \n                    Returns the beacons list value\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:102\n                \n            \n\n\n            \n                \n                    Returns the beacon information for passed id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrafficById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrafficById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:63\n                \n            \n\n\n            \n                \n                    Returns promise to traffic data by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrafficByIdAndType\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrafficByIdAndType(id, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:73\n                \n            \n\n\n            \n                \n                    Returns promise to traffic data by id and time period type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The time period type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrafficByMin\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrafficByMin(id, min)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns promise to traffic data by minimum time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Minimum time traffic data must be in UTC ms since Epoch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrafficByMinMax\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrafficByMinMax(id, min, max)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:94\n                \n            \n\n\n            \n                \n                    Returns promise to traffic data within time zone\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Beacon id\n\n                                    \n                                \n                                \n                                    min\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Minimum time traffic data must be in UTC ms since Epoch\n\n                                    \n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(beacon: Beacon)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:109\n                \n            \n\n\n            \n                \n                    Sends a request to the backend to register beacon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beacon\n                                    \n                                                Beacon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBeacons\n                        \n                        \n                    \n                \n            \n            \n                \nsetBeacons(beacons)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:32\n                \n            \n\n\n            \n                \n                    Sets the beacons object and triggers the update event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beacons\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(beacon: Beacon)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:116\n                \n            \n\n\n            \n                \n                    Sends a request to the backend to update beacon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beacon\n                                    \n                                                Beacon\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBeacons\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBeacons()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/beacon.service.ts:46\n                \n            \n\n\n            \n                \n                    Updates the beacons object with result from backend\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beacons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/beacon.service.ts:15\n                            \n                        \n\n                \n                    \n                        List of owned beacons\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.beacons.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/beacon.service.ts:20\n                            \n                        \n\n                \n                    \n                        Observable stream of change\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { Beacon } from '../models/beacon.model';\nimport config from '../helpers/config';\n\n/**\n * Service which handles beacon data requests\n */\n@Injectable()\nexport class BeaconService {\n    /**\n     * List of owned beacons\n     */\n    beacons: Subject = new Subject();\n\n    /**\n     * Observable stream of change\n     */\n    updated$ = this.beacons.asObservable();\n\n    /**\n     * Constructor\n     *\n     * @param http Http client for sending requests\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Sets the beacons object and triggers the update event\n     */\n    setBeacons(beacons) {\n        this.beacons.next(beacons);\n    }\n\n    /**\n     * Returns the beacons list value\n     */\n    getBeacons() {\n        return this.beacons;\n    }\n\n    /**\n     * Updates the beacons object with result from backend\n     */\n    updateBeacons() {\n        return this.http.get(`${config.apiUrl}/beacons/`)\n            .subscribe(\n                data => {\n                    this.setBeacons(data);\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n    }\n\n    /**\n     * Returns promise to traffic data by id\n     *\n     * @param id Beacon id\n     */\n    getTrafficById(id) {\n        return this.http.get(`${config.apiUrl}/traffic/${id}`);\n    }\n\n    /**\n     * Returns promise to traffic data by id and time period type\n     *\n     * @param id Beacon id\n     * @param type The time period type\n     */\n    getTrafficByIdAndType(id, type) {\n        return this.http.get(`${config.apiUrl}/traffic/${id}?type=${type}`);\n    }\n\n    /**\n     * Returns promise to traffic data by minimum time\n     *\n     * @param id Beacon id\n     * @param min Minimum time traffic data must be in UTC ms since Epoch\n     */\n    getTrafficByMin(id, min) {\n        return this.http.get(`${config.apiUrl}/traffic/${id}?min=${min}`);\n    }\n\n    /**\n     * Returns promise to traffic data within time zone\n     *\n     * @param id Beacon id\n     * @param min Minimum time traffic data must be in UTC ms since Epoch\n     * @param min Maximum time traffic data must be in UTC ms since Epoch\n     */\n    getTrafficByMinMax(id, min, max) {\n        return this.http.get(`${config.apiUrl}/traffic/${id}?min=${min}&max=${max}`);\n    }\n    /**\n     * Returns the beacon information for passed id\n     *\n     * @param id Beacon id\n     */\n    getById(id: number) {\n        return this.http.get(`${config.apiUrl}/beacons/` + id);\n    }\n\n    /**\n     * Sends a request to the backend to register beacon\n     */\n    register(beacon: Beacon) {\n        return this.http.post(`${config.apiUrl}/beacons/`, beacon);\n    }\n\n    /**\n     * Sends a request to the backend to update beacon\n     */\n    update(beacon: Beacon) {\n        return this.http.patch(`${config.apiUrl}/beacons/` + beacon.id, beacon);\n    }\n\n    /**\n     * Sends a request to the backend to delete beacon\n     *\n     * @param id Beacon id\n     */\n    delete(id: number) {\n        return this.http.delete(`${config.apiUrl}/beacons/` + id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts http errors and gracefully handles them\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for authenticating user\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/error.interceptor.ts:35\n                \n            \n\n\n            \n                \n                    Intercepts all incoming http responses and packages error for user notifications\n0: Connection refused\n400: Bad request, logout and redirect\n403: Forbidden, logout and redirect\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Http Request Object\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next http target\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Intercepts http errors and gracefully handles them\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    /**\n     * Constructor\n     *\n     * @param authenticationService Used for authenticating user\n     * @param router Helps navigate users\n     */\n    constructor(private authenticationService: AuthenticationService,\n                private router: Router) { }\n\n    /**\n     * Intercepts all incoming http responses and packages error for user notifications\n     *\n     * `0: Connection refused`\n     *\n     * `400: Bad request, logout and redirect`\n     *\n     * `403: Forbidden, logout and redirect`\n     *\n     * @param request Http Request Object\n     * @param next Next http target\n     */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(error => {\n            if (error.error instanceof ErrorEvent) {\n                // A client-side or network error occurred. Handle it accordingly.\n                return throwError(error.error);\n            } else if (error.status === 0) {\n                return throwError('Connection refused! Check your internet connection.');\n            } else if (error.status === 400) {\n                // Bad request was made\n                this.authenticationService.logout();\n                this.router.navigate(['/']);\n                return throwError('Something went wrong!');\n            } else if (error.status === 401) {\n                // The user could not be authorized\n                return throwError(error.error);\n            } else if (error.status === 403) {\n                // The user should not try this action, redirect to homepage\n                this.authenticationService.logout();\n                this.router.navigate(['/']);\n                return throwError('Not authenticated!');\n            } else {\n                // The backend returned an unsuccessful response code.\n                // The response body may contain clues as to what went wrong,\n                console.error(\n                    `Backend returned code ${error.status}, ` +\n                    `body was: ${error.error}`);\n                return throwError(error.error);\n            }\n        }));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts http jwt requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptor.ts:16\n                \n            \n\n\n            \n                \n                    Intercepts http requests with jwt tokens and parses it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current http request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Intercepts http jwt requests\n */\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    /**\n     * Intercepts http requests with jwt tokens and parses it\n     *\n     * @param request The current http request\n     * @param next The next handler\n     */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add authorization header with jwt token if available\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Homepage of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/landing-page.component.ts:20\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Homepage of the site\n */\n@Component({\n    selector: 'app-landing-page',\n    templateUrl: './landing-page.component.html'\n})\nexport class LandingPageComponent implements OnInit {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n    \n        \n            \n            \n                Beacons starting at \n                $59.99\n                Order Now\n            \n        \n        \n            \n            \n                Manage up to 5 beacons for free. \n                Manage\n            \n        \n        \n            \n        \n    \n    \n        \n        Previous\n    \n    \n        \n        Next\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Beacons starting at                 $59.99                Order Now                                                                    Manage up to 5 beacons for free.                 Manage                                                                        Previous                        Next    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component which contains login form\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The login form for the page\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps pull url parameters\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authenticates users tokens\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications for the page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login.component.ts:56\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login.component.ts:82\n                \n            \n\n\n            \n                \n                    Run when login button is clicked. Redirects to returnUrl on success.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Shows spinner when true\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Variable containing form values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        URL to redirect to after successful login\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Activates input validation\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login.component.ts:77\n                                \n                            \n                    \n                        \n                                Convenience getter for easy access to form fields\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AlertService } from '../services/alert.service';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Component which contains login form\n */\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n    /**\n     * Variable containing form values\n     */\n    loginForm: FormGroup;\n\n    /**\n     * Shows spinner when true\n     */\n    loading = false;\n\n    /**\n     * Activates input validation\n     */\n    submitted = false;\n\n    /**\n     * URL to redirect to after successful login\n     */\n    returnUrl: string;\n\n    /**\n     * Constructor\n     *\n     * @param formBuilder The login form for the page\n     * @param route Helps pull url parameters\n     * @param router Helps navigate users\n     * @param authenticationService Authenticates users tokens\n     * @param alertService Displays notifications for the page\n     */\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService) { }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        if (this.route.snapshot.queryParams['username']) {\n            this.f.username.setValue(this.route.snapshot.queryParams['username']);\n            this.alertService.success('Registration successful', true);\n        }\n\n        // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    /**\n     * Convenience getter for easy access to form fields\n     */\n    get f() { return this.loginForm.controls; }\n\n    /**\n     * Run when login button is clicked. Redirects to returnUrl on success.\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .subscribe(\n                data => {\n                    this.authenticationService.emitLogin(true);\n                    this.router.navigate([this.returnUrl], { relativeTo: this.route });\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n}\n\n    \n\n    \n        \n    \n        Username\n        \n        \n            Username is required\n        \n    \n    \n        Password\n        \n        \n            Password is required\n        \n    \n    \n        \n            Login\n            \n            Loading...\n        \n        Register\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username                            Username is required                        Password                            Password is required                                    Login                        Loading...                Register    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-page.component.ts\n\n\n    \n        Description\n    \n    \n        Component which renders login page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login-page.component.ts:20\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component which renders login page\n */\n@Component({\n    selector: 'app-login-page',\n    templateUrl: './login-page.component.html'\n})\nexport class LoginPageComponent implements OnInit {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        Component which user is redirected to when page does not exist\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/page-not-found.component.ts:20\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component which user is redirected to when page does not exist\n */\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html'\n})\nexport class PageNotFoundComponent implements OnInit {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePageComponent.html":{"url":"components/ProfilePageComponent.html","title":"component - ProfilePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfilePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile-page.component.ts\n\n\n    \n        Description\n    \n    \n        Component for profile page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-page\n            \n\n            \n                styleUrls\n                ./profile-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pswd\n                            \n                            \n                                pswdr\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookie: CookieService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile-page.component.ts:57\n                            \n                        \n\n                \n                    \n                            Subscribe to userService updates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cookie\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to retrieve and set cookies\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Updates information for logged in user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-page.component.ts:95\n                \n            \n\n\n            \n                \n                    Returns the currently logged in user\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-page.component.ts:86\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pswd\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-page.component.ts:52\n                            \n                        \n\n                \n                    \n                        The password to change to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pswdr\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-page.component.ts:57\n                            \n                        \n\n                \n                    \n                        The password again to verify\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-page.component.ts:47\n                            \n                        \n\n                \n                    \n                        The currently logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { UserService } from '../services/user.service';\n\n/**\n * Component for profile page\n */\n@Component({\n    selector: 'app-profile-page',\n    templateUrl: './profile-page.component.html',\n    styleUrls: ['./profile-page.component.css'],\n    animations: [\n        trigger('fade-out', [\n            state('visible', style({\n                opacity: 1\n            })),\n            state('invisible', style({\n                opacity: 0,\n                display: 'none'\n            })),\n            transition('visible => invisible', [\n              animate('0.2s')\n            ])\n        ]),\n        trigger('fade-in', [\n            state('visible', style({\n                opacity: 1\n            })),\n            state('invisible', style({\n                opacity: 0,\n                display: 'none'\n            })),\n            transition('invisible => visible', [\n              animate('0.2s')\n            ])\n        ])\n    ]\n})\nexport class ProfilePageComponent implements OnInit {\n\n    /**\n     * The currently logged in user\n     */\n    user;\n\n    /**\n     * The password to change to\n     */\n    pswd;\n\n    /**\n     * The password again to verify\n     */\n    pswdr;\n\n    /**\n     * Subscribe to userService updates\n     *\n     * @param cookie Used to retrieve and set cookies\n     * @param router Helps navigate users\n     * @param userService Updates information for logged in user\n     */\n    constructor(\n        private cookie: CookieService,\n        private router: Router,\n        private userService: UserService) {\n\n        userService.updated$.subscribe(success => {\n            if (!success) {\n                router.navigateByUrl('/');\n            } else {\n                setTimeout(() => {\n                    this.user = userService.getUser();\n                    console.log(this.user);\n                }, 1000);\n            }\n        });\n    }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n        try {\n            this.userService.updateUser(JSON.parse(this.cookie.get('token')).id);\n        } catch (err) { this.router.navigateByUrl('/'); }\n    }\n\n    /**\n     * Returns the currently logged in user\n     */\n    getUser() {\n        return this.userService.getUser();\n    }\n}\n\n    \n\n    \n        \n\n    \n        \n            Loading...\n        \n        \n            Loading...\n        \n        \n            Loading...\n        \n    \n\n\n    \n         My Profile \n        \n            \n            \n                \n                    \n                        Company Name\n                    \n                    \n                \n                \n                \n                    \n                        Username\n                    \n                    \n                \n\n                \n                    \n                        Email\n                    \n                    \n                \n\n                \n                    \n                        Change password\n                    \n                    \n                \n\n                 0\">\n                    \n                        Retype password *\n                    \n                    \n                \n            \n            \n            \n                Save\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./profile-page.component.css\n                \n                .loading-spinner {\n    width: 50px;\n    height: 50px;\n    margin-top: 10px;\n    margin-right: 20px;\n}\n\n.loading-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Loading...                            Loading...                            Loading...                         My Profile                                                                                             Company Name                                                                                                                                    Username                                                                                                                    Email                                                                                                                    Change password                                                                         0\">                                            Retype password *                                                                                                            Save                                '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register.component.ts\n\n\n    \n        Description\n    \n    \n        Component which handles registration form\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n            \n                templateUrl\n                register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The register form for the page\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps navigate users\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Updates information for logged in user\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications for the page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register.component.ts:49\n                \n            \n\n\n            \n                \n                    Initialize form data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Sends form data to registration endpoint and redirects to login on success\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register.component.ts:25\n                            \n                        \n\n                \n                    \n                        Shows spinner when true\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register.component.ts:20\n                            \n                        \n\n                \n                    \n                        Variable containing form data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        Activates input validation\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register.component.ts:61\n                                \n                            \n                    \n                        \n                                Convenience getter for easy access to form fields\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService } from '../services/alert.service';\nimport { UserService } from '../services/user.service';\n\n/**\n * Component which handles registration form\n */\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n    /**\n     * Variable containing form data\n     */\n    registerForm: FormGroup;\n\n    /**\n     * Shows spinner when true\n     */\n    loading = false;\n\n    /**\n     * Activates input validation\n     */\n    submitted = false;\n\n    /**\n     * Constructor\n     *\n     * @param formBuilder The register form for the page\n     * @param router Helps navigate users\n     * @param userService Updates information for logged in user\n     * @param alertService Displays notifications for the page\n     */\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        private alertService: AlertService) { }\n\n    /**\n     * Initialize form data\n     */\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            email: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Convenience getter for easy access to form fields\n     */\n    get f() { return this.registerForm.controls; }\n\n    /**\n     * Sends form data to registration endpoint and redirects to login on success\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', true);\n                    this.router.navigate(['/login'], {\n                        queryParams: { username: data['username'] } });\n                },\n                error => {\n                    console.log(error);\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n\n    \n\n    \n        \n    \n        Username\n        \n        \n            Username is required\n        \n    \n    \n        Name\n        \n        \n            Name is required\n        \n    \n    \n        Email\n        \n        \n            Email is required\n        \n    \n    \n        Password\n        \n        \n            Password is required\n            Password must be at least 6 characters\n        \n    \n    \n        Register\n        \n        Cancel\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username                            Username is required                        Name                            Name is required                        Email                            Email is required                        Password                            Password is required            Password must be at least 6 characters                        Register                Cancel    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register-page.component.ts\n\n\n    \n        Description\n    \n    \n        Component which renders the registration page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-page\n            \n\n\n\n\n            \n                templateUrl\n                ./register-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register-page.component.ts:20\n                \n            \n\n\n            \n                \n                    Runs on page load\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component which renders the registration page\n */\n@Component({\n    selector: 'app-register-page',\n    templateUrl: './register-page.component.html'\n})\nexport class RegisterPageComponent implements OnInit {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Runs on page load\n     */\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BeaconManagerPageComponent', 'selector': 'app-beacon-page'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfilePageComponent', 'selector': 'app-profile-page'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterPageComponent', 'selector': 'app-register-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Traffic.html":{"url":"classes/Traffic.html","title":"class - Traffic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Traffic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/traffic.model.ts\n        \n\n            \n                Description\n            \n            \n                Stores foot traffic for specific beacon\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                beacon_id\n                            \n                            \n                                detected_dev_dists\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/traffic.model.ts:8\n                            \n                        \n\n                \n                    \n                        MongoDB ObjectId\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beacon_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/traffic.model.ts:12\n                            \n                        \n\n                \n                    \n                        Eddystone-UID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detected_dev_dists\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/traffic.model.ts:20\n                            \n                        \n\n                \n                    \n                        Detected device distances\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/traffic.model.ts:16\n                            \n                        \n\n                \n                    \n                        UTC Time\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Traffic {\n    /**\n     * MongoDB ObjectId\n     */\n    _id?: string;\n    /**\n     * Eddystone-UID\n     */\n    beacon_id: string;\n    /**\n     * UTC Time\n     */\n    time: number;\n    /**\n     * Detected device distances\n     */\n    detected_dev_dists: [number];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Customer who owns pibeacons\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                beaconGroups\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beaconGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:24\n                            \n                        \n\n                \n                    \n                        Beacon groups\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:20\n                            \n                        \n\n                \n                    \n                        Email of user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:8\n                            \n                        \n\n                \n                    \n                        MongoDB ObjectId\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:16\n                            \n                        \n\n                \n                    \n                        Name of user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:12\n                            \n                        \n\n                \n                    \n                        User name\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n     * MongoDB ObjectId\n     */\n    id: number;\n    /**\n     * User name\n     */\n    username: string;\n    /**\n     * Name of user\n     */\n    name: string;\n    /**\n     * Email of user\n     */\n    email: string;\n    /**\n     * Beacon groups\n     */\n    beaconGroups?: [{\n        /**\n         * Beacon group name\n         */\n        name: string,\n        /**\n         * Beacon ObjectId for beacons in group\n         */\n        beacons: [string]\n    }];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which handles user requests\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                updated$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGroup\n                            \n                            \n                                clearUser\n                            \n                            \n                                delete\n                            \n                            \n                                deleteGroup\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                getUser\n                            \n                            \n                                register\n                            \n                            \n                                setUser\n                            \n                            \n                                update\n                            \n                            \n                                updateBeaconGroup\n                            \n                            \n                                updateBeaconOrder\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http client for sending requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \naddGroup(groupname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:110\n                \n            \n\n\n            \n                \n                    Adds a new empty group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    groupname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name for the new group\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearUser\n                        \n                        \n                    \n                \n            \n            \n                \nclearUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:55\n                \n            \n\n\n            \n                \n                    Sets the user to undefined\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:158\n                \n            \n\n\n            \n                \n                    Sends a delete request for the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGroup(groupname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:119\n                \n            \n\n\n            \n                \n                    Removes a group if its empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    groupname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Group name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:126\n                \n            \n\n\n            \n                \n                    Returns all users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:133\n                \n            \n\n\n            \n                \n                    Returns user specified by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:48\n                \n            \n\n\n            \n                \n                    Returns the currently set user\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a registration request to the backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user properties\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \nsetUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:41\n                \n            \n\n\n            \n                \n                    Sets the beacons object and triggers the change event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New user object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:151\n                \n            \n\n\n            \n                \n                    Updates a users settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user properties\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBeaconGroup\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBeaconGroup(beacon_id, groupname, oldgroupname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:100\n                \n            \n\n\n            \n                \n                    Updates which group a beacon belongs to\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    beacon_id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The UID of the target beacon\n\n                                    \n                                \n                                \n                                    groupname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group name to add to\n\n                                    \n                                \n                                \n                                    oldgroupname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The old group the beacon was in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBeaconOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBeaconOrder(group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:89\n                \n            \n\n\n            \n                \n                    Sends a new order for owned beacons within a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The group in the intended order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:65\n                \n            \n\n\n            \n                \n                    Retrieves the users properties\nSee user.model.ts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                        Change object to detect changes to user data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                        Observable of change detector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:23\n                            \n                        \n\n                \n                    \n                        User data\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport config from '../helpers/config';\n\n/**\n * Service which handles user requests\n */\n@Injectable()\nexport class UserService {\n    /**\n     * Change object to detect changes to user data\n     */\n    change: Subject = new Subject();\n    /**\n     * Observable of change detector\n     */\n    updated$ = this.change.asObservable();\n    /**\n     * User data\n     */\n    user;\n\n    /**\n     * Constructor\n     *\n     * @param http Http client for sending requests\n     */\n    constructor(private http: HttpClient) {\n        this.change.subscribe((value) => {\n            this.user = value;\n        });\n    }\n\n    /**\n     * Sets the beacons object and triggers the change event\n     *\n     * @param user New user object\n     */\n    setUser(user) {\n        this.change.next(user);\n    }\n\n    /**\n     * Returns the currently set user\n     */\n    getUser() {\n        return this.user;\n    }\n\n    /**\n     * Sets the user to undefined\n     */\n    clearUser() {\n        this.change.next(undefined);\n    }\n\n    /**\n     * Retrieves the users properties\n     * See user.model.ts\n     *\n     * @param id User id\n     */\n    updateUser(id) {\n        this.http.get(`${config.apiUrl}/users/` + id)\n            .subscribe(\n                data => {\n                    if (data) {\n                        this.setUser(data);\n                    } else {\n                        this.clearUser();\n                        return false;\n                    }\n                },\n                error => {\n                    console.log(error);\n                    this.clearUser();\n                    return false;\n                }\n            );\n    }\n\n    /**\n     * Sends a new order for owned beacons within a group\n     *\n     * @param group The group in the intended order\n     */\n    updateBeaconOrder(group) {\n        return this.http.put(`${config.apiUrl}/users/beacons/` + group.name, group);\n    }\n\n    /**\n     * Updates which group a beacon belongs to\n     *\n     * @param beacon_id The UID of the target beacon\n     * @param groupname The group name to add to\n     * @param oldgroupname The old group the beacon was in\n     */\n    updateBeaconGroup(beacon_id, groupname, oldgroupname) {\n        return this.http.put(`${config.apiUrl}/users/beacons/` + groupname + '/' + beacon_id,\n            { 'beacon_id': beacon_id, 'groupname': groupname, 'oldgroupname': oldgroupname });\n    }\n\n    /**\n     * Adds a new empty group\n     *\n     * @param groupname The name for the new group\n     */\n    addGroup(groupname) {\n        return this.http.post(`${config.apiUrl}/users/beacons/` + groupname, { name: groupname });\n    }\n\n    /**\n     * Removes a group if its empty\n     *\n     * @param groupname Group name\n     */\n    deleteGroup(groupname) {\n        return this.http.delete(`${config.apiUrl}/users/beacons/` + groupname);\n    }\n\n    /**\n     * Returns all users\n     */\n    getAll() {\n        return this.http.get(`${config.apiUrl}/users`);\n    }\n\n    /**\n     * Returns user specified by id\n     */\n    getById(id: number) {\n        return this.http.get(`${config.apiUrl}/users/` + id);\n    }\n\n    /**\n     * Sends a registration request to the backend\n     *\n     * @param user The user properties\n     */\n    register(user: User) {\n        return this.http.post(`${config.apiUrl}/users/register`, user);\n    }\n\n    /**\n     * Updates a users settings\n     *\n     * @param user The user properties\n     */\n    update(user: User) {\n        return this.http.put(`${config.apiUrl}/users/` + user.id, user);\n    }\n\n    /**\n     * Sends a delete request for the user\n     */\n    delete(id: number) {\n        return this.http.delete(`${config.apiUrl}/users/` + id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/beacon-manager-page.component.ts\n            \n            component\n            BeaconManagerPageComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/components/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/profile-page.component.ts\n            \n            component\n            ProfilePageComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/register-page.component.ts\n            \n            component\n            RegisterPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/directives/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/beacon.model.ts\n            \n            class\n            Beacon\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/traffic.model.ts\n            \n            class\n            Traffic\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/pipes/action.pipe.ts\n            \n            pipe\n            ActionPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/beacon.service.ts\n            \n            injectable\n            BeaconService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/build-angular : ^0.13.6\n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/cli : ~6.2.5\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/compiler-cli : ^7.2.6\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @fortawesome/fontawesome-free : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.1.0\n        \n            acorn : ^6.1.1\n        \n            bootstrap : ^4.3.1\n        \n            chart.js : ^2.8.0\n        \n            core-js : ^2.5.4\n        \n            express : ^4.16.4\n        \n            ng2-charts : ^2.2.2\n        \n            ngx-cookie-service : ^2.1.0\n        \n            path : ^0.12.7\n        \n            rxjs : ~6.2.0\n        \n            typescript : ^3.2.4\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend Documentation\nDocumentation\nhttps://janbro.github.io/pibeac/\nDeployment\nThe github repo is hooked into Travis CI which runs automated tests whenever a push to a branch is made. When changes are merged to master and the all tests pass, the app will be deployed to heroku at https://pibeac.herokuapp.com/. \nDevelopment\nChange config.ts to point to https://localhost:8080/api\nDevelopment:\nnpm run devbuild\nProduction:\nnpm run build\nBuild Documentation Locally:\nnpm run compodoc\nServe Documentation Locally:\nnpm run servedocs\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nActionPipe\n\nActionPipe\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionPipe->AppModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBeaconManagerPageComponent\n\nBeaconManagerPageComponent\n\nAppModule -->\n\nBeaconManagerPageComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfilePageComponent\n\nProfilePageComponent\n\nAppModule -->\n\nProfilePageComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAppModule -->\n\nRegisterPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nBeaconService\n\nBeaconService\n\nAppModule -->\n\nBeaconService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
